ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\cclZUmmV.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"ADC_Ext_CP_Clk.c"
  14              		.section	.debug_abbrev,"",%progbits
  15              	.Ldebug_abbrev0:
  16              		.section	.debug_info,"",%progbits
  17              	.Ldebug_info0:
  18              		.section	.debug_line,"",%progbits
  19              	.Ldebug_line0:
  20 0000 78010000 		.text
  20      02006600 
  20      00000201 
  20      FB0E0D00 
  20      01010101 
  21              	.Ltext0:
  22              		.cfi_sections	.debug_frame
  23              		.section	.text.ADC_Ext_CP_Clk_Start,"ax",%progbits
  24              		.align	2
  25              		.global	ADC_Ext_CP_Clk_Start
  26              		.thumb
  27              		.thumb_func
  28              		.type	ADC_Ext_CP_Clk_Start, %function
  29              	ADC_Ext_CP_Clk_Start:
  30              	.LFB0:
  31              		.file 1 ".\\Generated_Source\\PSoC5\\ADC_Ext_CP_Clk.c"
   1:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** * File Name: ADC_Ext_CP_Clk.c
   3:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** * Version 1.70
   4:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *
   5:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *  Description:
   6:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *   This file provides the source code to the API for the clock component.
   7:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *
   8:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *  Note:
   9:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *
  10:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** ********************************************************************************
  11:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** * Copyright 2008-2010, Cypress Semiconductor Corporation.  All rights reserved.
  12:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** * You may use this file only in accordance with the license, terms, conditions, 
  13:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  14:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** * the software package with which this file was provided.
  15:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** ********************************************************************************/
  16:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** 
  17:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** #include <cydevice_trm.h>
  18:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** #include "ADC_Ext_CP_Clk.h"
  19:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** 
  20:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** /* Clock Distribution registers. */
  21:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** #define CLK_DIST_LD              (* (reg8 *) CYREG_CLKDIST_LD)
  22:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** #define CLK_DIST_BCFG2           (* (reg8 *) CYREG_CLKDIST_BCFG2)
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\cclZUmmV.s 			page 2


  23:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** #define BCFG2_MASK               (0x80u)
  24:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** #define CLK_DIST_DMASK           (* (reg8 *) CYREG_CLKDIST_DMASK)
  25:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** #define CLK_DIST_AMASK           (* (reg8 *) CYREG_CLKDIST_AMASK)
  26:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** 
  27:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** #define HAS_CLKDIST_LD_DISABLE   (CY_PSOC3 || CY_PSOC5LP)
  28:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** 
  29:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** 
  30:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** /*******************************************************************************
  31:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** * Function Name: ADC_Ext_CP_Clk_Start
  32:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** ********************************************************************************
  33:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** * Summary:
  34:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *  Starts the clock. Note that on startup, clocks may be already running if the
  35:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *  "Start on Reset" option is enabled in the DWR.
  36:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *
  37:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** * Parameters:
  38:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *  void
  39:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *
  40:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** * Returns:
  41:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *  void
  42:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *
  43:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *******************************************************************************/
  44:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** void ADC_Ext_CP_Clk_Start(void) 
  45:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** {
  32              		.loc 1 45 0
  33              		.cfi_startproc
  34              		@ args = 0, pretend = 0, frame = 0
  35              		@ frame_needed = 1, uses_anonymous_args = 0
  36              		@ link register save eliminated.
  37 0000 80B4     		push	{r7}
  38              	.LCFI0:
  39              		.cfi_def_cfa_offset 4
  40 0002 00AF     		add	r7, sp, #0
  41              		.cfi_offset 7, -4
  42              	.LCFI1:
  43              		.cfi_def_cfa_register 7
  46:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****     /* Set the bit to enable the clock. */
  47:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****     ADC_Ext_CP_Clk_CLKEN |= ADC_Ext_CP_Clk_CLKEN_MASK;
  44              		.loc 1 47 0
  45 0004 44F2A233 		movw	r3, #:lower16:1073759138
  46 0008 C4F20003 		movt	r3, #:upper16:1073759138
  47 000c 44F2A232 		movw	r2, #:lower16:1073759138
  48 0010 C4F20002 		movt	r2, #:upper16:1073759138
  49 0014 1278     		ldrb	r2, [r2, #0]
  50 0016 D2B2     		uxtb	r2, r2
  51 0018 42F00102 		orr	r2, r2, #1
  52 001c D2B2     		uxtb	r2, r2
  53 001e 1A70     		strb	r2, [r3, #0]
  48:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** }
  54              		.loc 1 48 0
  55 0020 BD46     		mov	sp, r7
  56 0022 80BC     		pop	{r7}
  57 0024 7047     		bx	lr
  58              		.cfi_endproc
  59              	.LFE0:
  60              		.size	ADC_Ext_CP_Clk_Start, .-ADC_Ext_CP_Clk_Start
  61 0026 00BF     		.section	.text.ADC_Ext_CP_Clk_Stop,"ax",%progbits
  62              		.align	2
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\cclZUmmV.s 			page 3


  63              		.global	ADC_Ext_CP_Clk_Stop
  64              		.thumb
  65              		.thumb_func
  66              		.type	ADC_Ext_CP_Clk_Stop, %function
  67              	ADC_Ext_CP_Clk_Stop:
  68              	.LFB1:
  49:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** 
  50:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** 
  51:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** /*******************************************************************************
  52:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** * Function Name: ADC_Ext_CP_Clk_Stop
  53:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** ********************************************************************************
  54:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** * Summary:
  55:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *  Stops the clock and returns immediately. This API does not require the
  56:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *  source clock to be running but may return before the hardware is actually
  57:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *  disabled. If the settings of the clock are changed after calling this
  58:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *  function, the clock may glitch when it is started. To avoid the clock
  59:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *  glitch, use the StopBlock function.
  60:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *
  61:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** * Parameters:
  62:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *  void
  63:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *
  64:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** * Returns:
  65:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *  void
  66:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *
  67:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *******************************************************************************/
  68:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** void ADC_Ext_CP_Clk_Stop(void) 
  69:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** {
  69              		.loc 1 69 0
  70              		.cfi_startproc
  71              		@ args = 0, pretend = 0, frame = 0
  72              		@ frame_needed = 1, uses_anonymous_args = 0
  73              		@ link register save eliminated.
  74 0000 80B4     		push	{r7}
  75              	.LCFI2:
  76              		.cfi_def_cfa_offset 4
  77 0002 00AF     		add	r7, sp, #0
  78              		.cfi_offset 7, -4
  79              	.LCFI3:
  80              		.cfi_def_cfa_register 7
  70:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****     /* Clear the bit to disable the clock. */
  71:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****     ADC_Ext_CP_Clk_CLKEN &= ~ADC_Ext_CP_Clk_CLKEN_MASK;
  81              		.loc 1 71 0
  82 0004 44F2A233 		movw	r3, #:lower16:1073759138
  83 0008 C4F20003 		movt	r3, #:upper16:1073759138
  84 000c 44F2A232 		movw	r2, #:lower16:1073759138
  85 0010 C4F20002 		movt	r2, #:upper16:1073759138
  86 0014 1278     		ldrb	r2, [r2, #0]
  87 0016 D2B2     		uxtb	r2, r2
  88 0018 02F0FE02 		and	r2, r2, #254
  89 001c 1A70     		strb	r2, [r3, #0]
  72:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** }
  90              		.loc 1 72 0
  91 001e BD46     		mov	sp, r7
  92 0020 80BC     		pop	{r7}
  93 0022 7047     		bx	lr
  94              		.cfi_endproc
  95              	.LFE1:
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\cclZUmmV.s 			page 4


  96              		.size	ADC_Ext_CP_Clk_Stop, .-ADC_Ext_CP_Clk_Stop
  97              		.section	.text.ADC_Ext_CP_Clk_StopBlock,"ax",%progbits
  98              		.align	2
  99              		.global	ADC_Ext_CP_Clk_StopBlock
 100              		.thumb
 101              		.thumb_func
 102              		.type	ADC_Ext_CP_Clk_StopBlock, %function
 103              	ADC_Ext_CP_Clk_StopBlock:
 104              	.LFB2:
  73:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** 
  74:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** 
  75:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** #if(CY_PSOC3 || CY_PSOC5LP)
  76:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** /*******************************************************************************
  77:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** * Function Name: ADC_Ext_CP_Clk_StopBlock
  78:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** ********************************************************************************
  79:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** * Summary:
  80:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *  Stops the clock and waits for the hardware to actually be disabled before
  81:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *  returning. This ensures that the clock is never truncated (high part of the
  82:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *  cycle will terminate before the clock is disabled and the API returns).
  83:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *  Note that the source clock must be running or this API will never return as
  84:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *  a stopped clock cannot be disabled.
  85:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *
  86:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** * Parameters:
  87:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *  void
  88:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *
  89:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** * Returns:
  90:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *  void
  91:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *
  92:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *******************************************************************************/
  93:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** void ADC_Ext_CP_Clk_StopBlock(void) 
  94:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** {
 105              		.loc 1 94 0
 106              		.cfi_startproc
 107              		@ args = 0, pretend = 0, frame = 8
 108              		@ frame_needed = 1, uses_anonymous_args = 0
 109              		@ link register save eliminated.
 110 0000 80B4     		push	{r7}
 111              	.LCFI4:
 112              		.cfi_def_cfa_offset 4
 113 0002 83B0     		sub	sp, sp, #12
 114              	.LCFI5:
 115              		.cfi_def_cfa_offset 16
 116 0004 00AF     		add	r7, sp, #0
 117              		.cfi_offset 7, -4
 118              	.LCFI6:
 119              		.cfi_def_cfa_register 7
  95:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****     if (ADC_Ext_CP_Clk_CLKEN & ADC_Ext_CP_Clk_CLKEN_MASK)
 120              		.loc 1 95 0
 121 0006 44F2A233 		movw	r3, #:lower16:1073759138
 122 000a C4F20003 		movt	r3, #:upper16:1073759138
 123 000e 1B78     		ldrb	r3, [r3, #0]
 124 0010 DBB2     		uxtb	r3, r3
 125 0012 03F00103 		and	r3, r3, #1
 126 0016 DBB2     		uxtb	r3, r3
 127 0018 002B     		cmp	r3, #0
 128 001a 59D0     		beq	.L8
 129              	.LBB2:
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\cclZUmmV.s 			page 5


  96:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****     {
  97:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** #if HAS_CLKDIST_LD_DISABLE
  98:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****         uint16 oldDivider;
  99:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** 
 100:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****         CLK_DIST_LD = 0;
 130              		.loc 1 100 0
 131 001c 44F20103 		movw	r3, #:lower16:1073758209
 132 0020 C4F20003 		movt	r3, #:upper16:1073758209
 133 0024 4FF00002 		mov	r2, #0
 134 0028 1A70     		strb	r2, [r3, #0]
 101:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** 
 102:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****         /* Clear all the mask bits except ours. */
 103:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** #if defined(ADC_Ext_CP_Clk__CFG3)
 104:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****         CLK_DIST_AMASK = ADC_Ext_CP_Clk_CLKEN_MASK;
 105:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****         CLK_DIST_DMASK = 0x00u;
 106:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** #else
 107:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****         CLK_DIST_DMASK = ADC_Ext_CP_Clk_CLKEN_MASK;
 135              		.loc 1 107 0
 136 002a 44F21003 		movw	r3, #:lower16:1073758224
 137 002e C4F20003 		movt	r3, #:upper16:1073758224
 138 0032 4FF00102 		mov	r2, #1
 139 0036 1A70     		strb	r2, [r3, #0]
 108:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****         CLK_DIST_AMASK = 0x00u;
 140              		.loc 1 108 0
 141 0038 44F21403 		movw	r3, #:lower16:1073758228
 142 003c C4F20003 		movt	r3, #:upper16:1073758228
 143 0040 4FF00002 		mov	r2, #0
 144 0044 1A70     		strb	r2, [r3, #0]
 109:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** #endif
 110:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** 
 111:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****         /* Clear mask of bus clock. */
 112:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****         CLK_DIST_BCFG2 &= ~BCFG2_MASK;
 145              		.loc 1 112 0
 146 0046 44F20803 		movw	r3, #:lower16:1073758216
 147 004a C4F20003 		movt	r3, #:upper16:1073758216
 148 004e 44F20802 		movw	r2, #:lower16:1073758216
 149 0052 C4F20002 		movt	r2, #:upper16:1073758216
 150 0056 1278     		ldrb	r2, [r2, #0]
 151 0058 D2B2     		uxtb	r2, r2
 152 005a 02F07F02 		and	r2, r2, #127
 153 005e 1A70     		strb	r2, [r3, #0]
 113:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** 
 114:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****         oldDivider = CY_GET_REG16(ADC_Ext_CP_Clk_DIV_PTR);
 154              		.loc 1 114 0
 155 0060 44F28003 		movw	r3, #:lower16:1073758336
 156 0064 C4F20003 		movt	r3, #:upper16:1073758336
 157 0068 1B88     		ldrh	r3, [r3, #0]	@ movhi
 158 006a FB80     		strh	r3, [r7, #6]	@ movhi
 115:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****         CY_SET_REG16(CYREG_CLKDIST_WRK0, oldDivider);
 159              		.loc 1 115 0
 160 006c 44F20203 		movw	r3, #:lower16:1073758210
 161 0070 C4F20003 		movt	r3, #:upper16:1073758210
 162 0074 FA88     		ldrh	r2, [r7, #6]	@ movhi
 163 0076 1A80     		strh	r2, [r3, #0]	@ movhi
 116:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****         CLK_DIST_LD = CYCLK_LD_DISABLE | CYCLK_LD_SYNC_EN | CYCLK_LD_LOAD;
 164              		.loc 1 116 0
 165 0078 44F20103 		movw	r3, #:lower16:1073758209
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\cclZUmmV.s 			page 6


 166 007c C4F20003 		movt	r3, #:upper16:1073758209
 167 0080 4FF00702 		mov	r2, #7
 168 0084 1A70     		strb	r2, [r3, #0]
 169              	.L7:
 117:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** 
 118:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****         /* Wait for clock to be disabled */
 119:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****         while (CLK_DIST_LD & CYCLK_LD_LOAD) { }
 170              		.loc 1 119 0
 171 0086 44F20103 		movw	r3, #:lower16:1073758209
 172 008a C4F20003 		movt	r3, #:upper16:1073758209
 173 008e 1B78     		ldrb	r3, [r3, #0]
 174 0090 DBB2     		uxtb	r3, r3
 175 0092 03F00103 		and	r3, r3, #1
 176 0096 DBB2     		uxtb	r3, r3
 177 0098 002B     		cmp	r3, #0
 178 009a F4D1     		bne	.L7
 120:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** #endif
 121:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** 
 122:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****         /* Clear the bit to disable the clock. */
 123:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****         ADC_Ext_CP_Clk_CLKEN &= ~ADC_Ext_CP_Clk_CLKEN_MASK;
 179              		.loc 1 123 0
 180 009c 44F2A233 		movw	r3, #:lower16:1073759138
 181 00a0 C4F20003 		movt	r3, #:upper16:1073759138
 182 00a4 44F2A232 		movw	r2, #:lower16:1073759138
 183 00a8 C4F20002 		movt	r2, #:upper16:1073759138
 184 00ac 1278     		ldrb	r2, [r2, #0]
 185 00ae D2B2     		uxtb	r2, r2
 186 00b0 02F0FE02 		and	r2, r2, #254
 187 00b4 1A70     		strb	r2, [r3, #0]
 124:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** 
 125:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** #if HAS_CLKDIST_LD_DISABLE
 126:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****         /* Clear the disable bit */
 127:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****         CLK_DIST_LD = 0x00u;
 188              		.loc 1 127 0
 189 00b6 44F20103 		movw	r3, #:lower16:1073758209
 190 00ba C4F20003 		movt	r3, #:upper16:1073758209
 191 00be 4FF00002 		mov	r2, #0
 192 00c2 1A70     		strb	r2, [r3, #0]
 128:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****         CY_SET_REG16(ADC_Ext_CP_Clk_DIV_PTR, oldDivider);
 193              		.loc 1 128 0
 194 00c4 44F28003 		movw	r3, #:lower16:1073758336
 195 00c8 C4F20003 		movt	r3, #:upper16:1073758336
 196 00cc FA88     		ldrh	r2, [r7, #6]	@ movhi
 197 00ce 1A80     		strh	r2, [r3, #0]	@ movhi
 198              	.L8:
 199              	.LBE2:
 129:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** #endif
 130:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****     }
 131:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** }
 200              		.loc 1 131 0
 201 00d0 07F10C07 		add	r7, r7, #12
 202 00d4 BD46     		mov	sp, r7
 203 00d6 80BC     		pop	{r7}
 204 00d8 7047     		bx	lr
 205              		.cfi_endproc
 206              	.LFE2:
 207              		.size	ADC_Ext_CP_Clk_StopBlock, .-ADC_Ext_CP_Clk_StopBlock
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\cclZUmmV.s 			page 7


 208 00da 00BF     		.section	.text.ADC_Ext_CP_Clk_StandbyPower,"ax",%progbits
 209              		.align	2
 210              		.global	ADC_Ext_CP_Clk_StandbyPower
 211              		.thumb
 212              		.thumb_func
 213              		.type	ADC_Ext_CP_Clk_StandbyPower, %function
 214              	ADC_Ext_CP_Clk_StandbyPower:
 215              	.LFB3:
 132:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** #endif
 133:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** 
 134:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** /*******************************************************************************
 135:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** * Function Name: ADC_Ext_CP_Clk_StandbyPower
 136:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** ********************************************************************************
 137:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** * Summary:
 138:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *  Sets whether the clock is active in standby mode.
 139:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *
 140:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** * Parameters:
 141:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *  state:  0 to disable clock during standby, nonzero to enable.
 142:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *
 143:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** * Returns:
 144:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *  void
 145:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *
 146:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *******************************************************************************/
 147:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** void ADC_Ext_CP_Clk_StandbyPower(uint8 state) 
 148:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** {
 216              		.loc 1 148 0
 217              		.cfi_startproc
 218              		@ args = 0, pretend = 0, frame = 8
 219              		@ frame_needed = 1, uses_anonymous_args = 0
 220              		@ link register save eliminated.
 221 0000 80B4     		push	{r7}
 222              	.LCFI7:
 223              		.cfi_def_cfa_offset 4
 224 0002 83B0     		sub	sp, sp, #12
 225              	.LCFI8:
 226              		.cfi_def_cfa_offset 16
 227 0004 00AF     		add	r7, sp, #0
 228              		.cfi_offset 7, -4
 229              	.LCFI9:
 230              		.cfi_def_cfa_register 7
 231 0006 0346     		mov	r3, r0
 232 0008 FB71     		strb	r3, [r7, #7]
 149:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****     if(state == 0)
 233              		.loc 1 149 0
 234 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 235 000c 002B     		cmp	r3, #0
 236 000e 0DD1     		bne	.L10
 150:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****     {
 151:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****         ADC_Ext_CP_Clk_CLKSTBY &= ~ADC_Ext_CP_Clk_CLKSTBY_MASK;
 237              		.loc 1 151 0
 238 0010 44F2B233 		movw	r3, #:lower16:1073759154
 239 0014 C4F20003 		movt	r3, #:upper16:1073759154
 240 0018 44F2B232 		movw	r2, #:lower16:1073759154
 241 001c C4F20002 		movt	r2, #:upper16:1073759154
 242 0020 1278     		ldrb	r2, [r2, #0]
 243 0022 D2B2     		uxtb	r2, r2
 244 0024 02F0FE02 		and	r2, r2, #254
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\cclZUmmV.s 			page 8


 245 0028 1A70     		strb	r2, [r3, #0]
 246 002a 0DE0     		b	.L12
 247              	.L10:
 152:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****     }
 153:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****     else
 154:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****     {
 155:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****         ADC_Ext_CP_Clk_CLKSTBY |= ADC_Ext_CP_Clk_CLKSTBY_MASK;
 248              		.loc 1 155 0
 249 002c 44F2B233 		movw	r3, #:lower16:1073759154
 250 0030 C4F20003 		movt	r3, #:upper16:1073759154
 251 0034 44F2B232 		movw	r2, #:lower16:1073759154
 252 0038 C4F20002 		movt	r2, #:upper16:1073759154
 253 003c 1278     		ldrb	r2, [r2, #0]
 254 003e D2B2     		uxtb	r2, r2
 255 0040 42F00102 		orr	r2, r2, #1
 256 0044 D2B2     		uxtb	r2, r2
 257 0046 1A70     		strb	r2, [r3, #0]
 258              	.L12:
 156:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****     }
 157:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** }
 259              		.loc 1 157 0
 260 0048 07F10C07 		add	r7, r7, #12
 261 004c BD46     		mov	sp, r7
 262 004e 80BC     		pop	{r7}
 263 0050 7047     		bx	lr
 264              		.cfi_endproc
 265              	.LFE3:
 266              		.size	ADC_Ext_CP_Clk_StandbyPower, .-ADC_Ext_CP_Clk_StandbyPower
 267 0052 00BF     		.section	.text.ADC_Ext_CP_Clk_SetDividerRegister,"ax",%progbits
 268              		.align	2
 269              		.global	ADC_Ext_CP_Clk_SetDividerRegister
 270              		.thumb
 271              		.thumb_func
 272              		.type	ADC_Ext_CP_Clk_SetDividerRegister, %function
 273              	ADC_Ext_CP_Clk_SetDividerRegister:
 274              	.LFB4:
 158:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** 
 159:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** 
 160:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** /*******************************************************************************
 161:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** * Function Name: ADC_Ext_CP_Clk_SetDividerRegister
 162:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** ********************************************************************************
 163:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** * Summary:
 164:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *  Modifies the clock divider and, thus, the frequency. When the clock divider
 165:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *  register is set to zero or changed from zero, the clock will be temporarily
 166:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *  disabled in order to change the SSS mode bit. If the clock is enabled when
 167:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *  SetDividerRegister is called, then the source clock must be running.
 168:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *
 169:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** * Parameters:
 170:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *  clkDivider:  Divider register value (0-65,535). This value is NOT the
 171:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *    divider; the clock hardware divides by clkDivider plus one. For example,
 172:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *    to divide the clock by 2, this parameter should be set to 1.
 173:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *  restart:  If nonzero, restarts the clock divider: the current clock cycle
 174:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *   will be truncated and the new divide value will take effect immediately. If
 175:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *   zero, the new divide value will take effect at the end of the current clock
 176:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *   cycle.
 177:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *
 178:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** * Returns:
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\cclZUmmV.s 			page 9


 179:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *  void
 180:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *
 181:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *******************************************************************************/
 182:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** void ADC_Ext_CP_Clk_SetDividerRegister(uint16 clkDivider, uint8 restart) 
 183:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** {
 275              		.loc 1 183 0
 276              		.cfi_startproc
 277              		@ args = 0, pretend = 0, frame = 16
 278              		@ frame_needed = 1, uses_anonymous_args = 0
 279 0000 80B5     		push	{r7, lr}
 280              	.LCFI10:
 281              		.cfi_def_cfa_offset 8
 282 0002 84B0     		sub	sp, sp, #16
 283              	.LCFI11:
 284              		.cfi_def_cfa_offset 24
 285 0004 00AF     		add	r7, sp, #0
 286              		.cfi_offset 14, -4
 287              		.cfi_offset 7, -8
 288              	.LCFI12:
 289              		.cfi_def_cfa_register 7
 290 0006 0246     		mov	r2, r0
 291 0008 0B46     		mov	r3, r1
 292 000a FA80     		strh	r2, [r7, #6]	@ movhi
 293 000c 7B71     		strb	r3, [r7, #5]
 184:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****     uint8 enabled;
 185:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** 
 186:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****     uint8 currSrc = ADC_Ext_CP_Clk_GetSourceRegister();
 294              		.loc 1 186 0
 295 000e FFF7FEFF 		bl	ADC_Ext_CP_Clk_GetSourceRegister
 296 0012 0346     		mov	r3, r0
 297 0014 7B73     		strb	r3, [r7, #13]
 187:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****     uint16 oldDivider = ADC_Ext_CP_Clk_GetDividerRegister();
 298              		.loc 1 187 0
 299 0016 FFF7FEFF 		bl	ADC_Ext_CP_Clk_GetDividerRegister
 300 001a 0346     		mov	r3, r0
 301 001c FB81     		strh	r3, [r7, #14]	@ movhi
 188:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** 
 189:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****     if (clkDivider != oldDivider)
 302              		.loc 1 189 0
 303 001e FA88     		ldrh	r2, [r7, #6]
 304 0020 FB89     		ldrh	r3, [r7, #14]
 305 0022 9A42     		cmp	r2, r3
 306 0024 00F0D280 		beq	.L26
 190:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****     {
 191:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****         enabled = ADC_Ext_CP_Clk_CLKEN & ADC_Ext_CP_Clk_CLKEN_MASK;
 307              		.loc 1 191 0
 308 0028 44F2A233 		movw	r3, #:lower16:1073759138
 309 002c C4F20003 		movt	r3, #:upper16:1073759138
 310 0030 1B78     		ldrb	r3, [r3, #0]
 311 0032 DBB2     		uxtb	r3, r3
 312 0034 03F00103 		and	r3, r3, #1
 313 0038 3B73     		strb	r3, [r7, #12]
 192:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** 
 193:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****         if (currSrc == CYCLK_SRC_SEL_CLK_SYNC_D && (oldDivider == 0 || clkDivider == 0))
 314              		.loc 1 193 0
 315 003a 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 316 003c 002B     		cmp	r3, #0
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\cclZUmmV.s 			page 10


 317 003e 35D1     		bne	.L15
 318 0040 FB89     		ldrh	r3, [r7, #14]
 319 0042 002B     		cmp	r3, #0
 320 0044 02D0     		beq	.L16
 321 0046 FB88     		ldrh	r3, [r7, #6]
 322 0048 002B     		cmp	r3, #0
 323 004a 2FD1     		bne	.L15
 324              	.L16:
 194:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****         {
 195:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****             /* Moving to/from SSS requires correct ordering to prevent halting the clock    */
 196:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****             if (oldDivider == 0 && clkDivider != 0)
 325              		.loc 1 196 0
 326 004c FB89     		ldrh	r3, [r7, #14]
 327 004e 002B     		cmp	r3, #0
 328 0050 17D1     		bne	.L17
 329 0052 FB88     		ldrh	r3, [r7, #6]
 330 0054 002B     		cmp	r3, #0
 331 0056 14D0     		beq	.L17
 197:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****             {
 198:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****                 /* Moving away from SSS, set the divider first so when SSS is cleared we    */
 199:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****                 /* don't halt the clock.  Using the shadow load isn't required as the       */
 200:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****                 /* divider is ignored while SSS is set.                                     */
 201:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****                 CY_SET_REG16(ADC_Ext_CP_Clk_DIV_PTR, clkDivider);
 332              		.loc 1 201 0
 333 0058 44F28003 		movw	r3, #:lower16:1073758336
 334 005c C4F20003 		movt	r3, #:upper16:1073758336
 335 0060 FA88     		ldrh	r2, [r7, #6]	@ movhi
 336 0062 1A80     		strh	r2, [r3, #0]	@ movhi
 202:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****                 ADC_Ext_CP_Clk_MOD_SRC &= ~CYCLK_SSS;
 337              		.loc 1 202 0
 338 0064 44F28203 		movw	r3, #:lower16:1073758338
 339 0068 C4F20003 		movt	r3, #:upper16:1073758338
 340 006c 44F28202 		movw	r2, #:lower16:1073758338
 341 0070 C4F20002 		movt	r2, #:upper16:1073758338
 342 0074 1278     		ldrb	r2, [r2, #0]
 343 0076 D2B2     		uxtb	r2, r2
 344 0078 02F0BF02 		and	r2, r2, #191
 345 007c 1A70     		strb	r2, [r3, #0]
 346              		.loc 1 196 0
 347 007e 00BF     		nop
 348              		.loc 1 193 0
 349 0080 A4E0     		b	.L26
 350              	.L17:
 203:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****             }
 204:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****             else
 205:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****             {
 206:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****                 /* Moving to SSS, set SSS which then ignores the divider and we can set     */
 207:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****                 /* it without bothering with the shadow load.                               */
 208:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****                 ADC_Ext_CP_Clk_MOD_SRC |= CYCLK_SSS;
 351              		.loc 1 208 0
 352 0082 44F28203 		movw	r3, #:lower16:1073758338
 353 0086 C4F20003 		movt	r3, #:upper16:1073758338
 354 008a 44F28202 		movw	r2, #:lower16:1073758338
 355 008e C4F20002 		movt	r2, #:upper16:1073758338
 356 0092 1278     		ldrb	r2, [r2, #0]
 357 0094 D2B2     		uxtb	r2, r2
 358 0096 42F04002 		orr	r2, r2, #64
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\cclZUmmV.s 			page 11


 359 009a D2B2     		uxtb	r2, r2
 360 009c 1A70     		strb	r2, [r3, #0]
 209:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****                 CY_SET_REG16(ADC_Ext_CP_Clk_DIV_PTR, clkDivider);
 361              		.loc 1 209 0
 362 009e 44F28003 		movw	r3, #:lower16:1073758336
 363 00a2 C4F20003 		movt	r3, #:upper16:1073758336
 364 00a6 FA88     		ldrh	r2, [r7, #6]	@ movhi
 365 00a8 1A80     		strh	r2, [r3, #0]	@ movhi
 366              		.loc 1 193 0
 367 00aa 8FE0     		b	.L26
 368              	.L15:
 210:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****             }
 211:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****         }
 212:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****         else
 213:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****         {
 214:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****             if (enabled)
 369              		.loc 1 214 0
 370 00ac 3B7B     		ldrb	r3, [r7, #12]	@ zero_extendqisi2
 371 00ae 002B     		cmp	r3, #0
 372 00b0 4DD0     		beq	.L19
 215:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****             {
 216:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****                 CLK_DIST_LD = 0x00u;
 373              		.loc 1 216 0
 374 00b2 44F20103 		movw	r3, #:lower16:1073758209
 375 00b6 C4F20003 		movt	r3, #:upper16:1073758209
 376 00ba 4FF00002 		mov	r2, #0
 377 00be 1A70     		strb	r2, [r3, #0]
 217:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** 
 218:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****                 /* Clear all the mask bits except ours. */
 219:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** #if defined(ADC_Ext_CP_Clk__CFG3)
 220:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****                 CLK_DIST_AMASK = ADC_Ext_CP_Clk_CLKEN_MASK;
 221:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****                 CLK_DIST_DMASK = 0x00u;
 222:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** #else
 223:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****                 CLK_DIST_DMASK = ADC_Ext_CP_Clk_CLKEN_MASK;
 378              		.loc 1 223 0
 379 00c0 44F21003 		movw	r3, #:lower16:1073758224
 380 00c4 C4F20003 		movt	r3, #:upper16:1073758224
 381 00c8 4FF00102 		mov	r2, #1
 382 00cc 1A70     		strb	r2, [r3, #0]
 224:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****                 CLK_DIST_AMASK = 0x00u;
 383              		.loc 1 224 0
 384 00ce 44F21403 		movw	r3, #:lower16:1073758228
 385 00d2 C4F20003 		movt	r3, #:upper16:1073758228
 386 00d6 4FF00002 		mov	r2, #0
 387 00da 1A70     		strb	r2, [r3, #0]
 225:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** #endif
 226:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****                 /* Clear mask of bus clock. */
 227:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****                 CLK_DIST_BCFG2 &= ~BCFG2_MASK;
 388              		.loc 1 227 0
 389 00dc 44F20803 		movw	r3, #:lower16:1073758216
 390 00e0 C4F20003 		movt	r3, #:upper16:1073758216
 391 00e4 44F20802 		movw	r2, #:lower16:1073758216
 392 00e8 C4F20002 		movt	r2, #:upper16:1073758216
 393 00ec 1278     		ldrb	r2, [r2, #0]
 394 00ee D2B2     		uxtb	r2, r2
 395 00f0 02F07F02 		and	r2, r2, #127
 396 00f4 1A70     		strb	r2, [r3, #0]
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\cclZUmmV.s 			page 12


 228:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** 
 229:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** #if HAS_CLKDIST_LD_DISABLE
 230:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****                 CY_SET_REG16(CYREG_CLKDIST_WRK0, oldDivider);
 397              		.loc 1 230 0
 398 00f6 44F20203 		movw	r3, #:lower16:1073758210
 399 00fa C4F20003 		movt	r3, #:upper16:1073758210
 400 00fe FA89     		ldrh	r2, [r7, #14]	@ movhi
 401 0100 1A80     		strh	r2, [r3, #0]	@ movhi
 231:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****                 CLK_DIST_LD = CYCLK_LD_DISABLE|CYCLK_LD_SYNC_EN|CYCLK_LD_LOAD;
 402              		.loc 1 231 0
 403 0102 44F20103 		movw	r3, #:lower16:1073758209
 404 0106 C4F20003 		movt	r3, #:upper16:1073758209
 405 010a 4FF00702 		mov	r2, #7
 406 010e 1A70     		strb	r2, [r3, #0]
 407              	.L20:
 232:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** 
 233:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****                 /* Wait for clock to be disabled */
 234:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****                 while (CLK_DIST_LD & CYCLK_LD_LOAD) { }
 408              		.loc 1 234 0
 409 0110 44F20103 		movw	r3, #:lower16:1073758209
 410 0114 C4F20003 		movt	r3, #:upper16:1073758209
 411 0118 1B78     		ldrb	r3, [r3, #0]
 412 011a DBB2     		uxtb	r3, r3
 413 011c 03F00103 		and	r3, r3, #1
 414 0120 DBB2     		uxtb	r3, r3
 415 0122 002B     		cmp	r3, #0
 416 0124 F4D1     		bne	.L20
 235:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** #endif
 236:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** 
 237:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****                 ADC_Ext_CP_Clk_CLKEN &= ~ADC_Ext_CP_Clk_CLKEN_MASK;
 417              		.loc 1 237 0
 418 0126 44F2A233 		movw	r3, #:lower16:1073759138
 419 012a C4F20003 		movt	r3, #:upper16:1073759138
 420 012e 44F2A232 		movw	r2, #:lower16:1073759138
 421 0132 C4F20002 		movt	r2, #:upper16:1073759138
 422 0136 1278     		ldrb	r2, [r2, #0]
 423 0138 D2B2     		uxtb	r2, r2
 424 013a 02F0FE02 		and	r2, r2, #254
 425 013e 1A70     		strb	r2, [r3, #0]
 238:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** 
 239:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** #if HAS_CLKDIST_LD_DISABLE
 240:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****                 /* Clear the disable bit */
 241:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****                 CLK_DIST_LD = 0x00u;
 426              		.loc 1 241 0
 427 0140 44F20103 		movw	r3, #:lower16:1073758209
 428 0144 C4F20003 		movt	r3, #:upper16:1073758209
 429 0148 4FF00002 		mov	r2, #0
 430 014c 1A70     		strb	r2, [r3, #0]
 431              	.L19:
 242:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** #endif
 243:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****             }
 244:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** 
 245:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****             /* Load divide value. */
 246:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****             if (ADC_Ext_CP_Clk_CLKEN & ADC_Ext_CP_Clk_CLKEN_MASK)
 432              		.loc 1 246 0
 433 014e 44F2A233 		movw	r3, #:lower16:1073759138
 434 0152 C4F20003 		movt	r3, #:upper16:1073759138
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\cclZUmmV.s 			page 13


 435 0156 1B78     		ldrb	r3, [r3, #0]
 436 0158 DBB2     		uxtb	r3, r3
 437 015a 03F00103 		and	r3, r3, #1
 438 015e DBB2     		uxtb	r3, r3
 439 0160 002B     		cmp	r3, #0
 440 0162 1ED0     		beq	.L21
 247:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****             {
 248:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****                 /* If the clock is still enabled, use the shadow registers */
 249:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****                 CY_SET_REG16(CYREG_CLKDIST_WRK0, clkDivider);
 441              		.loc 1 249 0
 442 0164 44F20203 		movw	r3, #:lower16:1073758210
 443 0168 C4F20003 		movt	r3, #:upper16:1073758210
 444 016c FA88     		ldrh	r2, [r7, #6]	@ movhi
 445 016e 1A80     		strh	r2, [r3, #0]	@ movhi
 250:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** 
 251:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****                 CLK_DIST_LD = (CYCLK_LD_LOAD | (restart ? CYCLK_LD_SYNC_EN : 0x00u));
 446              		.loc 1 251 0
 447 0170 44F20103 		movw	r3, #:lower16:1073758209
 448 0174 C4F20003 		movt	r3, #:upper16:1073758209
 449 0178 7A79     		ldrb	r2, [r7, #5]	@ zero_extendqisi2
 450 017a 002A     		cmp	r2, #0
 451 017c 02D0     		beq	.L22
 452 017e 4FF00302 		mov	r2, #3
 453 0182 01E0     		b	.L23
 454              	.L22:
 455 0184 4FF00102 		mov	r2, #1
 456              	.L23:
 457 0188 1A70     		strb	r2, [r3, #0]
 458              	.L24:
 252:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****                 while (CLK_DIST_LD & CYCLK_LD_LOAD) { }
 459              		.loc 1 252 0
 460 018a 44F20103 		movw	r3, #:lower16:1073758209
 461 018e C4F20003 		movt	r3, #:upper16:1073758209
 462 0192 1B78     		ldrb	r3, [r3, #0]
 463 0194 DBB2     		uxtb	r3, r3
 464 0196 03F00103 		and	r3, r3, #1
 465 019a DBB2     		uxtb	r3, r3
 466 019c 002B     		cmp	r3, #0
 467 019e F4D1     		bne	.L24
 468 01a0 05E0     		b	.L25
 469              	.L21:
 253:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****             }
 254:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****             else
 255:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****             {
 256:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****                 /* If the clock is disabled, set the divider directly */
 257:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****                 CY_SET_REG16(ADC_Ext_CP_Clk_DIV_PTR, clkDivider);
 470              		.loc 1 257 0
 471 01a2 44F28003 		movw	r3, #:lower16:1073758336
 472 01a6 C4F20003 		movt	r3, #:upper16:1073758336
 473 01aa FA88     		ldrh	r2, [r7, #6]	@ movhi
 474 01ac 1A80     		strh	r2, [r3, #0]	@ movhi
 475              	.L25:
 258:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****             }
 259:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** 
 260:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****             ADC_Ext_CP_Clk_CLKEN |= enabled;
 476              		.loc 1 260 0
 477 01ae 44F2A233 		movw	r3, #:lower16:1073759138
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\cclZUmmV.s 			page 14


 478 01b2 C4F20003 		movt	r3, #:upper16:1073759138
 479 01b6 44F2A232 		movw	r2, #:lower16:1073759138
 480 01ba C4F20002 		movt	r2, #:upper16:1073759138
 481 01be 1278     		ldrb	r2, [r2, #0]
 482 01c0 D1B2     		uxtb	r1, r2
 483 01c2 3A7B     		ldrb	r2, [r7, #12]
 484 01c4 41EA0202 		orr	r2, r1, r2
 485 01c8 D2B2     		uxtb	r2, r2
 486 01ca 1A70     		strb	r2, [r3, #0]
 487              	.L26:
 261:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****         }
 262:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****     }
 263:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** }
 488              		.loc 1 263 0
 489 01cc 07F11007 		add	r7, r7, #16
 490 01d0 BD46     		mov	sp, r7
 491 01d2 80BD     		pop	{r7, pc}
 492              		.cfi_endproc
 493              	.LFE4:
 494              		.size	ADC_Ext_CP_Clk_SetDividerRegister, .-ADC_Ext_CP_Clk_SetDividerRegister
 495              		.section	.text.ADC_Ext_CP_Clk_GetDividerRegister,"ax",%progbits
 496              		.align	2
 497              		.global	ADC_Ext_CP_Clk_GetDividerRegister
 498              		.thumb
 499              		.thumb_func
 500              		.type	ADC_Ext_CP_Clk_GetDividerRegister, %function
 501              	ADC_Ext_CP_Clk_GetDividerRegister:
 502              	.LFB5:
 264:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** 
 265:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** 
 266:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** /*******************************************************************************
 267:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** * Function Name: ADC_Ext_CP_Clk_GetDividerRegister
 268:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** ********************************************************************************
 269:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** * Summary:
 270:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *  Gets the clock divider register value.
 271:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *
 272:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** * Parameters:
 273:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *  void
 274:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *
 275:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** * Returns:
 276:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *  Divide value of the clock minus 1. For example, if the clock is set to
 277:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *  divide by 2, the return value will be 1.
 278:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *
 279:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *******************************************************************************/
 280:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** uint16 ADC_Ext_CP_Clk_GetDividerRegister(void) 
 281:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** {
 503              		.loc 1 281 0
 504              		.cfi_startproc
 505              		@ args = 0, pretend = 0, frame = 0
 506              		@ frame_needed = 1, uses_anonymous_args = 0
 507              		@ link register save eliminated.
 508 0000 80B4     		push	{r7}
 509              	.LCFI13:
 510              		.cfi_def_cfa_offset 4
 511 0002 00AF     		add	r7, sp, #0
 512              		.cfi_offset 7, -4
 513              	.LCFI14:
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\cclZUmmV.s 			page 15


 514              		.cfi_def_cfa_register 7
 282:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****     return CY_GET_REG16(ADC_Ext_CP_Clk_DIV_PTR);
 515              		.loc 1 282 0
 516 0004 44F28003 		movw	r3, #:lower16:1073758336
 517 0008 C4F20003 		movt	r3, #:upper16:1073758336
 518 000c 1B88     		ldrh	r3, [r3, #0]	@ movhi
 519 000e 9BB2     		uxth	r3, r3
 283:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** }
 520              		.loc 1 283 0
 521 0010 1846     		mov	r0, r3
 522 0012 BD46     		mov	sp, r7
 523 0014 80BC     		pop	{r7}
 524 0016 7047     		bx	lr
 525              		.cfi_endproc
 526              	.LFE5:
 527              		.size	ADC_Ext_CP_Clk_GetDividerRegister, .-ADC_Ext_CP_Clk_GetDividerRegister
 528              		.section	.text.ADC_Ext_CP_Clk_SetModeRegister,"ax",%progbits
 529              		.align	2
 530              		.global	ADC_Ext_CP_Clk_SetModeRegister
 531              		.thumb
 532              		.thumb_func
 533              		.type	ADC_Ext_CP_Clk_SetModeRegister, %function
 534              	ADC_Ext_CP_Clk_SetModeRegister:
 535              	.LFB6:
 284:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** 
 285:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** 
 286:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** /*******************************************************************************
 287:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** * Function Name: ADC_Ext_CP_Clk_SetModeRegister
 288:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** ********************************************************************************
 289:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** * Summary:
 290:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *  Sets flags that control the operating mode of the clock. This function only
 291:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *  changes flags from 0 to 1; flags that are already 1 will remain unchanged.
 292:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *  To clear flags, use the ClearModeRegister function. The clock must be
 293:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *  disabled before changing the mode.
 294:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *
 295:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** * Parameters:
 296:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *  clkMode: Bit mask containing the bits to set. For PSoC 3 and PSoC 5,
 297:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *   clkMode should be a set of the following optional bits or'ed together.
 298:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *   - CYCLK_EARLY Enable early phase mode. Rising edge of output clock will
 299:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *                 occur when the divider count reaches half of the divide
 300:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *                 value.
 301:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *   - CYCLK_DUTY  Enable 50% duty cycle output. When enabled, the output clock
 302:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *                 is asserted for approximately half of its period. When
 303:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *                 disabled, the output clock is asserted for one period of the
 304:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *                 source clock.
 305:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *   - CYCLK_SYNC  Enable output synchronization to master clock. This should
 306:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *                 be enabled for all synchronous clocks.
 307:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *   See the Technical Reference Manual for details about setting the mode of
 308:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *   the clock. Specifically, see the CLKDIST.DCFG.CFG2 register.
 309:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *
 310:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** * Returns:
 311:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *  void
 312:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *
 313:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *******************************************************************************/
 314:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** void ADC_Ext_CP_Clk_SetModeRegister(uint8 clkMode) 
 315:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** {
 536              		.loc 1 315 0
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\cclZUmmV.s 			page 16


 537              		.cfi_startproc
 538              		@ args = 0, pretend = 0, frame = 8
 539              		@ frame_needed = 1, uses_anonymous_args = 0
 540              		@ link register save eliminated.
 541 0000 80B4     		push	{r7}
 542              	.LCFI15:
 543              		.cfi_def_cfa_offset 4
 544 0002 83B0     		sub	sp, sp, #12
 545              	.LCFI16:
 546              		.cfi_def_cfa_offset 16
 547 0004 00AF     		add	r7, sp, #0
 548              		.cfi_offset 7, -4
 549              	.LCFI17:
 550              		.cfi_def_cfa_register 7
 551 0006 0346     		mov	r3, r0
 552 0008 FB71     		strb	r3, [r7, #7]
 316:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****     ADC_Ext_CP_Clk_MOD_SRC |= clkMode & ADC_Ext_CP_Clk_MODE_MASK;
 553              		.loc 1 316 0
 554 000a 44F28203 		movw	r3, #:lower16:1073758338
 555 000e C4F20003 		movt	r3, #:upper16:1073758338
 556 0012 44F28202 		movw	r2, #:lower16:1073758338
 557 0016 C4F20002 		movt	r2, #:upper16:1073758338
 558 001a 1278     		ldrb	r2, [r2, #0]
 559 001c D1B2     		uxtb	r1, r2
 560 001e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 561 0020 02F0F802 		and	r2, r2, #248
 562 0024 41EA0202 		orr	r2, r1, r2
 563 0028 D2B2     		uxtb	r2, r2
 564 002a 1A70     		strb	r2, [r3, #0]
 317:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** }
 565              		.loc 1 317 0
 566 002c 07F10C07 		add	r7, r7, #12
 567 0030 BD46     		mov	sp, r7
 568 0032 80BC     		pop	{r7}
 569 0034 7047     		bx	lr
 570              		.cfi_endproc
 571              	.LFE6:
 572              		.size	ADC_Ext_CP_Clk_SetModeRegister, .-ADC_Ext_CP_Clk_SetModeRegister
 573 0036 00BF     		.section	.text.ADC_Ext_CP_Clk_ClearModeRegister,"ax",%progbits
 574              		.align	2
 575              		.global	ADC_Ext_CP_Clk_ClearModeRegister
 576              		.thumb
 577              		.thumb_func
 578              		.type	ADC_Ext_CP_Clk_ClearModeRegister, %function
 579              	ADC_Ext_CP_Clk_ClearModeRegister:
 580              	.LFB7:
 318:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** 
 319:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** 
 320:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** /*******************************************************************************
 321:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** * Function Name: ADC_Ext_CP_Clk_ClearModeRegister
 322:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** ********************************************************************************
 323:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** * Summary:
 324:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *  Clears flags that control the operating mode of the clock. This function
 325:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *  only changes flags from 1 to 0; flags that are already 0 will remain
 326:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *  unchanged. To set flags, use the SetModeRegister function. The clock must be
 327:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *  disabled before changing the mode.
 328:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\cclZUmmV.s 			page 17


 329:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** * Parameters:
 330:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *  clkMode: Bit mask containing the bits to clear. For PSoC 3 and PSoC 5,
 331:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *   clkMode should be a set of the following optional bits or'ed together.
 332:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *   - CYCLK_EARLY Enable early phase mode. Rising edge of output clock will
 333:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *                 occur when the divider count reaches half of the divide
 334:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *                 value.
 335:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *   - CYCLK_DUTY  Enable 50% duty cycle output. When enabled, the output clock
 336:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *                 is asserted for approximately half of its period. When
 337:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *                 disabled, the output clock is asserted for one period of the
 338:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *                 source clock.
 339:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *   - CYCLK_SYNC  Enable output synchronization to master clock. This should
 340:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *                 be enabled for all synchronous clocks.
 341:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *   See the Technical Reference Manual for details about setting the mode of
 342:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *   the clock. Specifically, see the CLKDIST.DCFG.CFG2 register.
 343:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *
 344:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** * Returns:
 345:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *  void
 346:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *
 347:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *******************************************************************************/
 348:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** void ADC_Ext_CP_Clk_ClearModeRegister(uint8 clkMode) 
 349:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** {
 581              		.loc 1 349 0
 582              		.cfi_startproc
 583              		@ args = 0, pretend = 0, frame = 8
 584              		@ frame_needed = 1, uses_anonymous_args = 0
 585              		@ link register save eliminated.
 586 0000 80B4     		push	{r7}
 587              	.LCFI18:
 588              		.cfi_def_cfa_offset 4
 589 0002 83B0     		sub	sp, sp, #12
 590              	.LCFI19:
 591              		.cfi_def_cfa_offset 16
 592 0004 00AF     		add	r7, sp, #0
 593              		.cfi_offset 7, -4
 594              	.LCFI20:
 595              		.cfi_def_cfa_register 7
 596 0006 0346     		mov	r3, r0
 597 0008 FB71     		strb	r3, [r7, #7]
 350:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****     ADC_Ext_CP_Clk_MOD_SRC &= ~clkMode | ~ADC_Ext_CP_Clk_MODE_MASK;
 598              		.loc 1 350 0
 599 000a 44F28203 		movw	r3, #:lower16:1073758338
 600 000e C4F20003 		movt	r3, #:upper16:1073758338
 601 0012 44F28202 		movw	r2, #:lower16:1073758338
 602 0016 C4F20002 		movt	r2, #:upper16:1073758338
 603 001a 1278     		ldrb	r2, [r2, #0]
 604 001c D1B2     		uxtb	r1, r2
 605 001e FA79     		ldrb	r2, [r7, #7]
 606 0020 6FEA0202 		mvn	r2, r2
 607 0024 D2B2     		uxtb	r2, r2
 608 0026 42F00702 		orr	r2, r2, #7
 609 002a D2B2     		uxtb	r2, r2
 610 002c 01EA0202 		and	r2, r1, r2
 611 0030 D2B2     		uxtb	r2, r2
 612 0032 1A70     		strb	r2, [r3, #0]
 351:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** }
 613              		.loc 1 351 0
 614 0034 07F10C07 		add	r7, r7, #12
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\cclZUmmV.s 			page 18


 615 0038 BD46     		mov	sp, r7
 616 003a 80BC     		pop	{r7}
 617 003c 7047     		bx	lr
 618              		.cfi_endproc
 619              	.LFE7:
 620              		.size	ADC_Ext_CP_Clk_ClearModeRegister, .-ADC_Ext_CP_Clk_ClearModeRegister
 621 003e 00BF     		.section	.text.ADC_Ext_CP_Clk_GetModeRegister,"ax",%progbits
 622              		.align	2
 623              		.global	ADC_Ext_CP_Clk_GetModeRegister
 624              		.thumb
 625              		.thumb_func
 626              		.type	ADC_Ext_CP_Clk_GetModeRegister, %function
 627              	ADC_Ext_CP_Clk_GetModeRegister:
 628              	.LFB8:
 352:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** 
 353:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** 
 354:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** /*******************************************************************************
 355:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** * Function Name: ADC_Ext_CP_Clk_GetModeRegister
 356:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** ********************************************************************************
 357:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** * Summary:
 358:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *  Gets the clock mode register value.
 359:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *
 360:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** * Parameters:
 361:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *  void
 362:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *
 363:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** * Returns:
 364:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *  Bit mask representing the enabled mode bits. See the SetModeRegister and
 365:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *  ClearModeRegister descriptions for details about the mode bits.
 366:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *
 367:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *******************************************************************************/
 368:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** uint8 ADC_Ext_CP_Clk_GetModeRegister(void) 
 369:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** {
 629              		.loc 1 369 0
 630              		.cfi_startproc
 631              		@ args = 0, pretend = 0, frame = 0
 632              		@ frame_needed = 1, uses_anonymous_args = 0
 633              		@ link register save eliminated.
 634 0000 80B4     		push	{r7}
 635              	.LCFI21:
 636              		.cfi_def_cfa_offset 4
 637 0002 00AF     		add	r7, sp, #0
 638              		.cfi_offset 7, -4
 639              	.LCFI22:
 640              		.cfi_def_cfa_register 7
 370:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****     return ADC_Ext_CP_Clk_MOD_SRC & ADC_Ext_CP_Clk_MODE_MASK;
 641              		.loc 1 370 0
 642 0004 44F28203 		movw	r3, #:lower16:1073758338
 643 0008 C4F20003 		movt	r3, #:upper16:1073758338
 644 000c 1B78     		ldrb	r3, [r3, #0]
 645 000e DBB2     		uxtb	r3, r3
 646 0010 03F0F803 		and	r3, r3, #248
 371:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** }
 647              		.loc 1 371 0
 648 0014 1846     		mov	r0, r3
 649 0016 BD46     		mov	sp, r7
 650 0018 80BC     		pop	{r7}
 651 001a 7047     		bx	lr
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\cclZUmmV.s 			page 19


 652              		.cfi_endproc
 653              	.LFE8:
 654              		.size	ADC_Ext_CP_Clk_GetModeRegister, .-ADC_Ext_CP_Clk_GetModeRegister
 655              		.section	.text.ADC_Ext_CP_Clk_SetSourceRegister,"ax",%progbits
 656              		.align	2
 657              		.global	ADC_Ext_CP_Clk_SetSourceRegister
 658              		.thumb
 659              		.thumb_func
 660              		.type	ADC_Ext_CP_Clk_SetSourceRegister, %function
 661              	ADC_Ext_CP_Clk_SetSourceRegister:
 662              	.LFB9:
 372:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** 
 373:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** 
 374:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** /*******************************************************************************
 375:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** * Function Name: ADC_Ext_CP_Clk_SetSourceRegister
 376:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** ********************************************************************************
 377:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** * Summary:
 378:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *  Sets the input source of the clock. The clock must be disabled before
 379:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *  changing the source. The old and new clock sources must be running.
 380:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *
 381:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** * Parameters:
 382:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *  clkSource:  For PSoC 3 and PSoC 5 devices, clkSource should be one of the
 383:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *   following input sources:
 384:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *   - CYCLK_SRC_SEL_SYNC_DIG
 385:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *   - CYCLK_SRC_SEL_IMO
 386:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *   - CYCLK_SRC_SEL_XTALM
 387:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *   - CYCLK_SRC_SEL_ILO
 388:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *   - CYCLK_SRC_SEL_PLL
 389:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *   - CYCLK_SRC_SEL_XTALK
 390:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *   - CYCLK_SRC_SEL_DSI_G
 391:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *   - CYCLK_SRC_SEL_DSI_D/CYCLK_SRC_SEL_DSI_A
 392:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *   See the Technical Reference Manual for details on clock sources.
 393:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *
 394:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** * Returns:
 395:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *  void
 396:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *
 397:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *******************************************************************************/
 398:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** void ADC_Ext_CP_Clk_SetSourceRegister(uint8 clkSource) 
 399:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** {
 663              		.loc 1 399 0
 664              		.cfi_startproc
 665              		@ args = 0, pretend = 0, frame = 16
 666              		@ frame_needed = 1, uses_anonymous_args = 0
 667 0000 80B5     		push	{r7, lr}
 668              	.LCFI23:
 669              		.cfi_def_cfa_offset 8
 670 0002 84B0     		sub	sp, sp, #16
 671              	.LCFI24:
 672              		.cfi_def_cfa_offset 24
 673 0004 00AF     		add	r7, sp, #0
 674              		.cfi_offset 14, -4
 675              		.cfi_offset 7, -8
 676              	.LCFI25:
 677              		.cfi_def_cfa_register 7
 678 0006 0346     		mov	r3, r0
 679 0008 FB71     		strb	r3, [r7, #7]
 400:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****     uint16 currDiv = ADC_Ext_CP_Clk_GetDividerRegister();
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\cclZUmmV.s 			page 20


 680              		.loc 1 400 0
 681 000a FFF7FEFF 		bl	ADC_Ext_CP_Clk_GetDividerRegister
 682 000e 0346     		mov	r3, r0
 683 0010 BB81     		strh	r3, [r7, #12]	@ movhi
 401:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****     uint8 oldSrc = ADC_Ext_CP_Clk_GetSourceRegister();
 684              		.loc 1 401 0
 685 0012 FFF7FEFF 		bl	ADC_Ext_CP_Clk_GetSourceRegister
 686 0016 0346     		mov	r3, r0
 687 0018 FB73     		strb	r3, [r7, #15]
 402:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** 
 403:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****     if (oldSrc != CYCLK_SRC_SEL_CLK_SYNC_D && clkSource == CYCLK_SRC_SEL_CLK_SYNC_D && currDiv == 0
 688              		.loc 1 403 0
 689 001a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 690 001c 002B     		cmp	r3, #0
 691 001e 25D0     		beq	.L36
 692 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 693 0022 002B     		cmp	r3, #0
 694 0024 22D1     		bne	.L36
 695 0026 BB89     		ldrh	r3, [r7, #12]
 696 0028 002B     		cmp	r3, #0
 697 002a 1FD1     		bne	.L36
 404:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****     {
 405:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****         /* Switching to Master and divider is 1, set SSS, which will output master, */
 406:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****         /* then set the source so we are consistent.                                */
 407:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****         ADC_Ext_CP_Clk_MOD_SRC |= CYCLK_SSS;
 698              		.loc 1 407 0
 699 002c 44F28203 		movw	r3, #:lower16:1073758338
 700 0030 C4F20003 		movt	r3, #:upper16:1073758338
 701 0034 44F28202 		movw	r2, #:lower16:1073758338
 702 0038 C4F20002 		movt	r2, #:upper16:1073758338
 703 003c 1278     		ldrb	r2, [r2, #0]
 704 003e D2B2     		uxtb	r2, r2
 705 0040 42F04002 		orr	r2, r2, #64
 706 0044 D2B2     		uxtb	r2, r2
 707 0046 1A70     		strb	r2, [r3, #0]
 408:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****         ADC_Ext_CP_Clk_MOD_SRC =
 708              		.loc 1 408 0
 709 0048 44F28203 		movw	r3, #:lower16:1073758338
 710 004c C4F20003 		movt	r3, #:upper16:1073758338
 409:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****             (ADC_Ext_CP_Clk_MOD_SRC & ~ADC_Ext_CP_Clk_SRC_SEL_MSK) | clkSource;
 711              		.loc 1 409 0
 712 0050 44F28202 		movw	r2, #:lower16:1073758338
 713 0054 C4F20002 		movt	r2, #:upper16:1073758338
 714 0058 1278     		ldrb	r2, [r2, #0]
 715 005a D2B2     		uxtb	r2, r2
 716              		.loc 1 408 0
 717 005c 02F0F802 		and	r2, r2, #248
 718 0060 F979     		ldrb	r1, [r7, #7]
 719 0062 42EA0102 		orr	r2, r2, r1
 720 0066 D2B2     		uxtb	r2, r2
 721 0068 1A70     		strb	r2, [r3, #0]
 722              		.loc 1 403 0
 723 006a 38E0     		b	.L39
 724              	.L36:
 410:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****     }
 411:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****     else if (oldSrc == CYCLK_SRC_SEL_CLK_SYNC_D && clkSource != CYCLK_SRC_SEL_CLK_SYNC_D && currDiv
 725              		.loc 1 411 0
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\cclZUmmV.s 			page 21


 726 006c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 727 006e 002B     		cmp	r3, #0
 728 0070 24D1     		bne	.L38
 729 0072 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 730 0074 002B     		cmp	r3, #0
 731 0076 21D0     		beq	.L38
 732 0078 BB89     		ldrh	r3, [r7, #12]
 733 007a 002B     		cmp	r3, #0
 734 007c 1ED1     		bne	.L38
 412:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****     {
 413:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****         /* Switching from Master to not and divider is 1, set source, so we don't   */
 414:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****         /* lock when we clear SSS.                                                  */
 415:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****         ADC_Ext_CP_Clk_MOD_SRC =
 735              		.loc 1 415 0
 736 007e 44F28203 		movw	r3, #:lower16:1073758338
 737 0082 C4F20003 		movt	r3, #:upper16:1073758338
 416:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****             (ADC_Ext_CP_Clk_MOD_SRC & ~ADC_Ext_CP_Clk_SRC_SEL_MSK) | clkSource;
 738              		.loc 1 416 0
 739 0086 44F28202 		movw	r2, #:lower16:1073758338
 740 008a C4F20002 		movt	r2, #:upper16:1073758338
 741 008e 1278     		ldrb	r2, [r2, #0]
 742 0090 D2B2     		uxtb	r2, r2
 743              		.loc 1 415 0
 744 0092 02F0F802 		and	r2, r2, #248
 745 0096 F979     		ldrb	r1, [r7, #7]
 746 0098 42EA0102 		orr	r2, r2, r1
 747 009c D2B2     		uxtb	r2, r2
 748 009e 1A70     		strb	r2, [r3, #0]
 417:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****         ADC_Ext_CP_Clk_MOD_SRC &= ~CYCLK_SSS;
 749              		.loc 1 417 0
 750 00a0 44F28203 		movw	r3, #:lower16:1073758338
 751 00a4 C4F20003 		movt	r3, #:upper16:1073758338
 752 00a8 44F28202 		movw	r2, #:lower16:1073758338
 753 00ac C4F20002 		movt	r2, #:upper16:1073758338
 754 00b0 1278     		ldrb	r2, [r2, #0]
 755 00b2 D2B2     		uxtb	r2, r2
 756 00b4 02F0BF02 		and	r2, r2, #191
 757 00b8 1A70     		strb	r2, [r3, #0]
 758              		.loc 1 411 0
 759 00ba 10E0     		b	.L39
 760              	.L38:
 418:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****     }
 419:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****     else
 420:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****     {
 421:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****         ADC_Ext_CP_Clk_MOD_SRC =
 761              		.loc 1 421 0
 762 00bc 44F28203 		movw	r3, #:lower16:1073758338
 763 00c0 C4F20003 		movt	r3, #:upper16:1073758338
 422:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****             (ADC_Ext_CP_Clk_MOD_SRC & ~ADC_Ext_CP_Clk_SRC_SEL_MSK) | clkSource;
 764              		.loc 1 422 0
 765 00c4 44F28202 		movw	r2, #:lower16:1073758338
 766 00c8 C4F20002 		movt	r2, #:upper16:1073758338
 767 00cc 1278     		ldrb	r2, [r2, #0]
 768 00ce D2B2     		uxtb	r2, r2
 769              		.loc 1 421 0
 770 00d0 02F0F802 		and	r2, r2, #248
 771 00d4 F979     		ldrb	r1, [r7, #7]
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\cclZUmmV.s 			page 22


 772 00d6 42EA0102 		orr	r2, r2, r1
 773 00da D2B2     		uxtb	r2, r2
 774 00dc 1A70     		strb	r2, [r3, #0]
 775              	.L39:
 423:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****     }
 424:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** }
 776              		.loc 1 424 0
 777 00de 07F11007 		add	r7, r7, #16
 778 00e2 BD46     		mov	sp, r7
 779 00e4 80BD     		pop	{r7, pc}
 780              		.cfi_endproc
 781              	.LFE9:
 782              		.size	ADC_Ext_CP_Clk_SetSourceRegister, .-ADC_Ext_CP_Clk_SetSourceRegister
 783 00e6 00BF     		.section	.text.ADC_Ext_CP_Clk_GetSourceRegister,"ax",%progbits
 784              		.align	2
 785              		.global	ADC_Ext_CP_Clk_GetSourceRegister
 786              		.thumb
 787              		.thumb_func
 788              		.type	ADC_Ext_CP_Clk_GetSourceRegister, %function
 789              	ADC_Ext_CP_Clk_GetSourceRegister:
 790              	.LFB10:
 425:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** 
 426:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** 
 427:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** /*******************************************************************************
 428:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** * Function Name: ADC_Ext_CP_Clk_GetSourceRegister
 429:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** ********************************************************************************
 430:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** * Summary:
 431:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *  Gets the input source of the clock.
 432:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *
 433:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** * Parameters:
 434:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *  void
 435:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *
 436:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** * Returns:
 437:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *  The input source of the clock. See SetSourceRegister for details.
 438:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *
 439:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** *******************************************************************************/
 440:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** uint8 ADC_Ext_CP_Clk_GetSourceRegister(void) 
 441:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** {
 791              		.loc 1 441 0
 792              		.cfi_startproc
 793              		@ args = 0, pretend = 0, frame = 0
 794              		@ frame_needed = 1, uses_anonymous_args = 0
 795              		@ link register save eliminated.
 796 0000 80B4     		push	{r7}
 797              	.LCFI26:
 798              		.cfi_def_cfa_offset 4
 799 0002 00AF     		add	r7, sp, #0
 800              		.cfi_offset 7, -4
 801              	.LCFI27:
 802              		.cfi_def_cfa_register 7
 442:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c ****     return ADC_Ext_CP_Clk_MOD_SRC & ADC_Ext_CP_Clk_SRC_SEL_MSK;
 803              		.loc 1 442 0
 804 0004 44F28203 		movw	r3, #:lower16:1073758338
 805 0008 C4F20003 		movt	r3, #:upper16:1073758338
 806 000c 1B78     		ldrb	r3, [r3, #0]
 807 000e DBB2     		uxtb	r3, r3
 808 0010 03F00703 		and	r3, r3, #7
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\cclZUmmV.s 			page 23


 443:.\Generated_Source\PSoC5/ADC_Ext_CP_Clk.c **** }
 809              		.loc 1 443 0
 810 0014 1846     		mov	r0, r3
 811 0016 BD46     		mov	sp, r7
 812 0018 80BC     		pop	{r7}
 813 001a 7047     		bx	lr
 814              		.cfi_endproc
 815              	.LFE10:
 816              		.size	ADC_Ext_CP_Clk_GetSourceRegister, .-ADC_Ext_CP_Clk_GetSourceRegister
 817              		.text
 818              	.Letext0:
 819              		.section	.debug_loc,"",%progbits
 820              	.Ldebug_loc0:
 821              	.LLST0:
 822 0000 00000000 		.4byte	.LFB0
 823 0004 02000000 		.4byte	.LCFI0
 824 0008 0100     		.2byte	0x1
 825 000a 5D       		.byte	0x5d
 826 000b 02000000 		.4byte	.LCFI0
 827 000f 04000000 		.4byte	.LCFI1
 828 0013 0200     		.2byte	0x2
 829 0015 7D       		.byte	0x7d
 830 0016 04       		.sleb128 4
 831 0017 04000000 		.4byte	.LCFI1
 832 001b 26000000 		.4byte	.LFE0
 833 001f 0200     		.2byte	0x2
 834 0021 77       		.byte	0x77
 835 0022 04       		.sleb128 4
 836 0023 00000000 		.4byte	0x0
 837 0027 00000000 		.4byte	0x0
 838              	.LLST1:
 839 002b 00000000 		.4byte	.LFB1
 840 002f 02000000 		.4byte	.LCFI2
 841 0033 0100     		.2byte	0x1
 842 0035 5D       		.byte	0x5d
 843 0036 02000000 		.4byte	.LCFI2
 844 003a 04000000 		.4byte	.LCFI3
 845 003e 0200     		.2byte	0x2
 846 0040 7D       		.byte	0x7d
 847 0041 04       		.sleb128 4
 848 0042 04000000 		.4byte	.LCFI3
 849 0046 24000000 		.4byte	.LFE1
 850 004a 0200     		.2byte	0x2
 851 004c 77       		.byte	0x77
 852 004d 04       		.sleb128 4
 853 004e 00000000 		.4byte	0x0
 854 0052 00000000 		.4byte	0x0
 855              	.LLST2:
 856 0056 00000000 		.4byte	.LFB2
 857 005a 02000000 		.4byte	.LCFI4
 858 005e 0100     		.2byte	0x1
 859 0060 5D       		.byte	0x5d
 860 0061 02000000 		.4byte	.LCFI4
 861 0065 04000000 		.4byte	.LCFI5
 862 0069 0200     		.2byte	0x2
 863 006b 7D       		.byte	0x7d
 864 006c 04       		.sleb128 4
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\cclZUmmV.s 			page 24


 865 006d 04000000 		.4byte	.LCFI5
 866 0071 06000000 		.4byte	.LCFI6
 867 0075 0200     		.2byte	0x2
 868 0077 7D       		.byte	0x7d
 869 0078 10       		.sleb128 16
 870 0079 06000000 		.4byte	.LCFI6
 871 007d DA000000 		.4byte	.LFE2
 872 0081 0200     		.2byte	0x2
 873 0083 77       		.byte	0x77
 874 0084 10       		.sleb128 16
 875 0085 00000000 		.4byte	0x0
 876 0089 00000000 		.4byte	0x0
 877              	.LLST3:
 878 008d 00000000 		.4byte	.LFB3
 879 0091 02000000 		.4byte	.LCFI7
 880 0095 0100     		.2byte	0x1
 881 0097 5D       		.byte	0x5d
 882 0098 02000000 		.4byte	.LCFI7
 883 009c 04000000 		.4byte	.LCFI8
 884 00a0 0200     		.2byte	0x2
 885 00a2 7D       		.byte	0x7d
 886 00a3 04       		.sleb128 4
 887 00a4 04000000 		.4byte	.LCFI8
 888 00a8 06000000 		.4byte	.LCFI9
 889 00ac 0200     		.2byte	0x2
 890 00ae 7D       		.byte	0x7d
 891 00af 10       		.sleb128 16
 892 00b0 06000000 		.4byte	.LCFI9
 893 00b4 52000000 		.4byte	.LFE3
 894 00b8 0200     		.2byte	0x2
 895 00ba 77       		.byte	0x77
 896 00bb 10       		.sleb128 16
 897 00bc 00000000 		.4byte	0x0
 898 00c0 00000000 		.4byte	0x0
 899              	.LLST4:
 900 00c4 00000000 		.4byte	.LFB4
 901 00c8 02000000 		.4byte	.LCFI10
 902 00cc 0100     		.2byte	0x1
 903 00ce 5D       		.byte	0x5d
 904 00cf 02000000 		.4byte	.LCFI10
 905 00d3 04000000 		.4byte	.LCFI11
 906 00d7 0200     		.2byte	0x2
 907 00d9 7D       		.byte	0x7d
 908 00da 08       		.sleb128 8
 909 00db 04000000 		.4byte	.LCFI11
 910 00df 06000000 		.4byte	.LCFI12
 911 00e3 0200     		.2byte	0x2
 912 00e5 7D       		.byte	0x7d
 913 00e6 18       		.sleb128 24
 914 00e7 06000000 		.4byte	.LCFI12
 915 00eb D4010000 		.4byte	.LFE4
 916 00ef 0200     		.2byte	0x2
 917 00f1 77       		.byte	0x77
 918 00f2 18       		.sleb128 24
 919 00f3 00000000 		.4byte	0x0
 920 00f7 00000000 		.4byte	0x0
 921              	.LLST5:
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\cclZUmmV.s 			page 25


 922 00fb 00000000 		.4byte	.LFB5
 923 00ff 02000000 		.4byte	.LCFI13
 924 0103 0100     		.2byte	0x1
 925 0105 5D       		.byte	0x5d
 926 0106 02000000 		.4byte	.LCFI13
 927 010a 04000000 		.4byte	.LCFI14
 928 010e 0200     		.2byte	0x2
 929 0110 7D       		.byte	0x7d
 930 0111 04       		.sleb128 4
 931 0112 04000000 		.4byte	.LCFI14
 932 0116 18000000 		.4byte	.LFE5
 933 011a 0200     		.2byte	0x2
 934 011c 77       		.byte	0x77
 935 011d 04       		.sleb128 4
 936 011e 00000000 		.4byte	0x0
 937 0122 00000000 		.4byte	0x0
 938              	.LLST6:
 939 0126 00000000 		.4byte	.LFB6
 940 012a 02000000 		.4byte	.LCFI15
 941 012e 0100     		.2byte	0x1
 942 0130 5D       		.byte	0x5d
 943 0131 02000000 		.4byte	.LCFI15
 944 0135 04000000 		.4byte	.LCFI16
 945 0139 0200     		.2byte	0x2
 946 013b 7D       		.byte	0x7d
 947 013c 04       		.sleb128 4
 948 013d 04000000 		.4byte	.LCFI16
 949 0141 06000000 		.4byte	.LCFI17
 950 0145 0200     		.2byte	0x2
 951 0147 7D       		.byte	0x7d
 952 0148 10       		.sleb128 16
 953 0149 06000000 		.4byte	.LCFI17
 954 014d 36000000 		.4byte	.LFE6
 955 0151 0200     		.2byte	0x2
 956 0153 77       		.byte	0x77
 957 0154 10       		.sleb128 16
 958 0155 00000000 		.4byte	0x0
 959 0159 00000000 		.4byte	0x0
 960              	.LLST7:
 961 015d 00000000 		.4byte	.LFB7
 962 0161 02000000 		.4byte	.LCFI18
 963 0165 0100     		.2byte	0x1
 964 0167 5D       		.byte	0x5d
 965 0168 02000000 		.4byte	.LCFI18
 966 016c 04000000 		.4byte	.LCFI19
 967 0170 0200     		.2byte	0x2
 968 0172 7D       		.byte	0x7d
 969 0173 04       		.sleb128 4
 970 0174 04000000 		.4byte	.LCFI19
 971 0178 06000000 		.4byte	.LCFI20
 972 017c 0200     		.2byte	0x2
 973 017e 7D       		.byte	0x7d
 974 017f 10       		.sleb128 16
 975 0180 06000000 		.4byte	.LCFI20
 976 0184 3E000000 		.4byte	.LFE7
 977 0188 0200     		.2byte	0x2
 978 018a 77       		.byte	0x77
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\cclZUmmV.s 			page 26


 979 018b 10       		.sleb128 16
 980 018c 00000000 		.4byte	0x0
 981 0190 00000000 		.4byte	0x0
 982              	.LLST8:
 983 0194 00000000 		.4byte	.LFB8
 984 0198 02000000 		.4byte	.LCFI21
 985 019c 0100     		.2byte	0x1
 986 019e 5D       		.byte	0x5d
 987 019f 02000000 		.4byte	.LCFI21
 988 01a3 04000000 		.4byte	.LCFI22
 989 01a7 0200     		.2byte	0x2
 990 01a9 7D       		.byte	0x7d
 991 01aa 04       		.sleb128 4
 992 01ab 04000000 		.4byte	.LCFI22
 993 01af 1C000000 		.4byte	.LFE8
 994 01b3 0200     		.2byte	0x2
 995 01b5 77       		.byte	0x77
 996 01b6 04       		.sleb128 4
 997 01b7 00000000 		.4byte	0x0
 998 01bb 00000000 		.4byte	0x0
 999              	.LLST9:
 1000 01bf 00000000 		.4byte	.LFB9
 1001 01c3 02000000 		.4byte	.LCFI23
 1002 01c7 0100     		.2byte	0x1
 1003 01c9 5D       		.byte	0x5d
 1004 01ca 02000000 		.4byte	.LCFI23
 1005 01ce 04000000 		.4byte	.LCFI24
 1006 01d2 0200     		.2byte	0x2
 1007 01d4 7D       		.byte	0x7d
 1008 01d5 08       		.sleb128 8
 1009 01d6 04000000 		.4byte	.LCFI24
 1010 01da 06000000 		.4byte	.LCFI25
 1011 01de 0200     		.2byte	0x2
 1012 01e0 7D       		.byte	0x7d
 1013 01e1 18       		.sleb128 24
 1014 01e2 06000000 		.4byte	.LCFI25
 1015 01e6 E6000000 		.4byte	.LFE9
 1016 01ea 0200     		.2byte	0x2
 1017 01ec 77       		.byte	0x77
 1018 01ed 18       		.sleb128 24
 1019 01ee 00000000 		.4byte	0x0
 1020 01f2 00000000 		.4byte	0x0
 1021              	.LLST10:
 1022 01f6 00000000 		.4byte	.LFB10
 1023 01fa 02000000 		.4byte	.LCFI26
 1024 01fe 0100     		.2byte	0x1
 1025 0200 5D       		.byte	0x5d
 1026 0201 02000000 		.4byte	.LCFI26
 1027 0205 04000000 		.4byte	.LCFI27
 1028 0209 0200     		.2byte	0x2
 1029 020b 7D       		.byte	0x7d
 1030 020c 04       		.sleb128 4
 1031 020d 04000000 		.4byte	.LCFI27
 1032 0211 1C000000 		.4byte	.LFE10
 1033 0215 0200     		.2byte	0x2
 1034 0217 77       		.byte	0x77
 1035 0218 04       		.sleb128 4
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\cclZUmmV.s 			page 27


 1036 0219 00000000 		.4byte	0x0
 1037 021d 00000000 		.4byte	0x0
 1038              		.file 2 "./Generated_Source/PSoC5/cytypes.h"
 1039              		.section	.debug_info
 1040 0000 65020000 		.4byte	0x265
 1041 0004 0200     		.2byte	0x2
 1042 0006 00000000 		.4byte	.Ldebug_abbrev0
 1043 000a 04       		.byte	0x4
 1044 000b 01       		.uleb128 0x1
 1045 000c F8010000 		.4byte	.LASF35
 1046 0010 01       		.byte	0x1
 1047 0011 5A010000 		.4byte	.LASF36
 1048 0015 5F000000 		.4byte	.LASF37
 1049 0019 00000000 		.4byte	0x0
 1050 001d 00000000 		.4byte	0x0
 1051 0021 00000000 		.4byte	.Ldebug_ranges0+0x0
 1052 0025 00000000 		.4byte	.Ldebug_line0
 1053 0029 02       		.uleb128 0x2
 1054 002a 01       		.byte	0x1
 1055 002b 06       		.byte	0x6
 1056 002c 77020000 		.4byte	.LASF0
 1057 0030 02       		.uleb128 0x2
 1058 0031 01       		.byte	0x1
 1059 0032 08       		.byte	0x8
 1060 0033 FB000000 		.4byte	.LASF1
 1061 0037 02       		.uleb128 0x2
 1062 0038 02       		.byte	0x2
 1063 0039 05       		.byte	0x5
 1064 003a 54020000 		.4byte	.LASF2
 1065 003e 02       		.uleb128 0x2
 1066 003f 02       		.byte	0x2
 1067 0040 07       		.byte	0x7
 1068 0041 23010000 		.4byte	.LASF3
 1069 0045 02       		.uleb128 0x2
 1070 0046 04       		.byte	0x4
 1071 0047 05       		.byte	0x5
 1072 0048 64020000 		.4byte	.LASF4
 1073 004c 02       		.uleb128 0x2
 1074 004d 04       		.byte	0x4
 1075 004e 07       		.byte	0x7
 1076 004f 11010000 		.4byte	.LASF5
 1077 0053 02       		.uleb128 0x2
 1078 0054 08       		.byte	0x8
 1079 0055 05       		.byte	0x5
 1080 0056 00000000 		.4byte	.LASF6
 1081 005a 02       		.uleb128 0x2
 1082 005b 08       		.byte	0x8
 1083 005c 07       		.byte	0x7
 1084 005d CC010000 		.4byte	.LASF7
 1085 0061 03       		.uleb128 0x3
 1086 0062 04       		.byte	0x4
 1087 0063 05       		.byte	0x5
 1088 0064 696E7400 		.ascii	"int\000"
 1089 0068 02       		.uleb128 0x2
 1090 0069 04       		.byte	0x4
 1091 006a 07       		.byte	0x7
 1092 006b 9B010000 		.4byte	.LASF8
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\cclZUmmV.s 			page 28


 1093 006f 04       		.uleb128 0x4
 1094 0070 5E020000 		.4byte	.LASF9
 1095 0074 02       		.byte	0x2
 1096 0075 4C       		.byte	0x4c
 1097 0076 30000000 		.4byte	0x30
 1098 007a 04       		.uleb128 0x4
 1099 007b 8C010000 		.4byte	.LASF10
 1100 007f 02       		.byte	0x2
 1101 0080 4D       		.byte	0x4d
 1102 0081 3E000000 		.4byte	0x3e
 1103 0085 02       		.uleb128 0x2
 1104 0086 04       		.byte	0x4
 1105 0087 04       		.byte	0x4
 1106 0088 F5000000 		.4byte	.LASF11
 1107 008c 02       		.uleb128 0x2
 1108 008d 08       		.byte	0x8
 1109 008e 04       		.byte	0x4
 1110 008f CF000000 		.4byte	.LASF12
 1111 0093 02       		.uleb128 0x2
 1112 0094 01       		.byte	0x1
 1113 0095 08       		.byte	0x8
 1114 0096 25020000 		.4byte	.LASF13
 1115 009a 05       		.uleb128 0x5
 1116 009b 01       		.byte	0x1
 1117 009c E3010000 		.4byte	.LASF14
 1118 00a0 01       		.byte	0x1
 1119 00a1 2C       		.byte	0x2c
 1120 00a2 01       		.byte	0x1
 1121 00a3 00000000 		.4byte	.LFB0
 1122 00a7 26000000 		.4byte	.LFE0
 1123 00ab 00000000 		.4byte	.LLST0
 1124 00af 05       		.uleb128 0x5
 1125 00b0 01       		.byte	0x1
 1126 00b1 83020000 		.4byte	.LASF15
 1127 00b5 01       		.byte	0x1
 1128 00b6 44       		.byte	0x44
 1129 00b7 01       		.byte	0x1
 1130 00b8 00000000 		.4byte	.LFB1
 1131 00bc 24000000 		.4byte	.LFE1
 1132 00c0 2B000000 		.4byte	.LLST1
 1133 00c4 06       		.uleb128 0x6
 1134 00c5 01       		.byte	0x1
 1135 00c6 36010000 		.4byte	.LASF16
 1136 00ca 01       		.byte	0x1
 1137 00cb 5D       		.byte	0x5d
 1138 00cc 01       		.byte	0x1
 1139 00cd 00000000 		.4byte	.LFB2
 1140 00d1 DA000000 		.4byte	.LFE2
 1141 00d5 56000000 		.4byte	.LLST2
 1142 00d9 F6000000 		.4byte	0xf6
 1143 00dd 07       		.uleb128 0x7
 1144 00de 1C000000 		.4byte	.LBB2
 1145 00e2 D0000000 		.4byte	.LBE2
 1146 00e6 08       		.uleb128 0x8
 1147 00e7 54000000 		.4byte	.LASF22
 1148 00eb 01       		.byte	0x1
 1149 00ec 62       		.byte	0x62
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\cclZUmmV.s 			page 29


 1150 00ed 7A000000 		.4byte	0x7a
 1151 00f1 02       		.byte	0x2
 1152 00f2 91       		.byte	0x91
 1153 00f3 76       		.sleb128 -10
 1154 00f4 00       		.byte	0x0
 1155 00f5 00       		.byte	0x0
 1156 00f6 06       		.uleb128 0x6
 1157 00f7 01       		.byte	0x1
 1158 00f8 B0010000 		.4byte	.LASF17
 1159 00fc 01       		.byte	0x1
 1160 00fd 93       		.byte	0x93
 1161 00fe 01       		.byte	0x1
 1162 00ff 00000000 		.4byte	.LFB3
 1163 0103 52000000 		.4byte	.LFE3
 1164 0107 8D000000 		.4byte	.LLST3
 1165 010b 1E010000 		.4byte	0x11e
 1166 010f 09       		.uleb128 0x9
 1167 0110 4E000000 		.4byte	.LASF19
 1168 0114 01       		.byte	0x1
 1169 0115 93       		.byte	0x93
 1170 0116 6F000000 		.4byte	0x6f
 1171 011a 02       		.byte	0x2
 1172 011b 91       		.byte	0x91
 1173 011c 77       		.sleb128 -9
 1174 011d 00       		.byte	0x0
 1175 011e 06       		.uleb128 0x6
 1176 011f 01       		.byte	0x1
 1177 0120 8C000000 		.4byte	.LASF18
 1178 0124 01       		.byte	0x1
 1179 0125 B6       		.byte	0xb6
 1180 0126 01       		.byte	0x1
 1181 0127 00000000 		.4byte	.LFB4
 1182 012b D4010000 		.4byte	.LFE4
 1183 012f C4000000 		.4byte	.LLST4
 1184 0133 7E010000 		.4byte	0x17e
 1185 0137 09       		.uleb128 0x9
 1186 0138 4F010000 		.4byte	.LASF20
 1187 013c 01       		.byte	0x1
 1188 013d B6       		.byte	0xb6
 1189 013e 7A000000 		.4byte	0x7a
 1190 0142 02       		.byte	0x2
 1191 0143 91       		.byte	0x91
 1192 0144 6E       		.sleb128 -18
 1193 0145 09       		.uleb128 0x9
 1194 0146 84010000 		.4byte	.LASF21
 1195 014a 01       		.byte	0x1
 1196 014b B6       		.byte	0xb6
 1197 014c 6F000000 		.4byte	0x6f
 1198 0150 02       		.byte	0x2
 1199 0151 91       		.byte	0x91
 1200 0152 6D       		.sleb128 -19
 1201 0153 08       		.uleb128 0x8
 1202 0154 09010000 		.4byte	.LASF23
 1203 0158 01       		.byte	0x1
 1204 0159 B8       		.byte	0xb8
 1205 015a 6F000000 		.4byte	0x6f
 1206 015e 02       		.byte	0x2
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\cclZUmmV.s 			page 30


 1207 015f 91       		.byte	0x91
 1208 0160 74       		.sleb128 -12
 1209 0161 08       		.uleb128 0x8
 1210 0162 A8010000 		.4byte	.LASF24
 1211 0166 01       		.byte	0x1
 1212 0167 BA       		.byte	0xba
 1213 0168 6F000000 		.4byte	0x6f
 1214 016c 02       		.byte	0x2
 1215 016d 91       		.byte	0x91
 1216 016e 75       		.sleb128 -11
 1217 016f 08       		.uleb128 0x8
 1218 0170 54000000 		.4byte	.LASF22
 1219 0174 01       		.byte	0x1
 1220 0175 BB       		.byte	0xbb
 1221 0176 7A000000 		.4byte	0x7a
 1222 017a 02       		.byte	0x2
 1223 017b 91       		.byte	0x91
 1224 017c 76       		.sleb128 -10
 1225 017d 00       		.byte	0x0
 1226 017e 0A       		.uleb128 0xa
 1227 017f 01       		.byte	0x1
 1228 0180 32020000 		.4byte	.LASF28
 1229 0184 01       		.byte	0x1
 1230 0185 1801     		.2byte	0x118
 1231 0187 01       		.byte	0x1
 1232 0188 7A000000 		.4byte	0x7a
 1233 018c 00000000 		.4byte	.LFB5
 1234 0190 18000000 		.4byte	.LFE5
 1235 0194 FB000000 		.4byte	.LLST5
 1236 0198 0B       		.uleb128 0xb
 1237 0199 01       		.byte	0x1
 1238 019a D6000000 		.4byte	.LASF25
 1239 019e 01       		.byte	0x1
 1240 019f 3A01     		.2byte	0x13a
 1241 01a1 01       		.byte	0x1
 1242 01a2 00000000 		.4byte	.LFB6
 1243 01a6 36000000 		.4byte	.LFE6
 1244 01aa 26010000 		.4byte	.LLST6
 1245 01ae C2010000 		.4byte	0x1c2
 1246 01b2 0C       		.uleb128 0xc
 1247 01b3 93010000 		.4byte	.LASF26
 1248 01b7 01       		.byte	0x1
 1249 01b8 3A01     		.2byte	0x13a
 1250 01ba 6F000000 		.4byte	0x6f
 1251 01be 02       		.byte	0x2
 1252 01bf 91       		.byte	0x91
 1253 01c0 77       		.sleb128 -9
 1254 01c1 00       		.byte	0x0
 1255 01c2 0B       		.uleb128 0xb
 1256 01c3 01       		.byte	0x1
 1257 01c4 04020000 		.4byte	.LASF27
 1258 01c8 01       		.byte	0x1
 1259 01c9 5C01     		.2byte	0x15c
 1260 01cb 01       		.byte	0x1
 1261 01cc 00000000 		.4byte	.LFB7
 1262 01d0 3E000000 		.4byte	.LFE7
 1263 01d4 5D010000 		.4byte	.LLST7
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\cclZUmmV.s 			page 31


 1264 01d8 EC010000 		.4byte	0x1ec
 1265 01dc 0C       		.uleb128 0xc
 1266 01dd 93010000 		.4byte	.LASF26
 1267 01e1 01       		.byte	0x1
 1268 01e2 5C01     		.2byte	0x15c
 1269 01e4 6F000000 		.4byte	0x6f
 1270 01e8 02       		.byte	0x2
 1271 01e9 91       		.byte	0x91
 1272 01ea 77       		.sleb128 -9
 1273 01eb 00       		.byte	0x0
 1274 01ec 0A       		.uleb128 0xa
 1275 01ed 01       		.byte	0x1
 1276 01ee 0E000000 		.4byte	.LASF29
 1277 01f2 01       		.byte	0x1
 1278 01f3 7001     		.2byte	0x170
 1279 01f5 01       		.byte	0x1
 1280 01f6 6F000000 		.4byte	0x6f
 1281 01fa 00000000 		.4byte	.LFB8
 1282 01fe 1C000000 		.4byte	.LFE8
 1283 0202 94010000 		.4byte	.LLST8
 1284 0206 0B       		.uleb128 0xb
 1285 0207 01       		.byte	0x1
 1286 0208 2D000000 		.4byte	.LASF30
 1287 020c 01       		.byte	0x1
 1288 020d 8E01     		.2byte	0x18e
 1289 020f 01       		.byte	0x1
 1290 0210 00000000 		.4byte	.LFB9
 1291 0214 E6000000 		.4byte	.LFE9
 1292 0218 BF010000 		.4byte	.LLST9
 1293 021c 4E020000 		.4byte	0x24e
 1294 0220 0C       		.uleb128 0xc
 1295 0221 6D020000 		.4byte	.LASF31
 1296 0225 01       		.byte	0x1
 1297 0226 8E01     		.2byte	0x18e
 1298 0228 6F000000 		.4byte	0x6f
 1299 022c 02       		.byte	0x2
 1300 022d 91       		.byte	0x91
 1301 022e 6F       		.sleb128 -17
 1302 022f 0D       		.uleb128 0xd
 1303 0230 2A020000 		.4byte	.LASF32
 1304 0234 01       		.byte	0x1
 1305 0235 9001     		.2byte	0x190
 1306 0237 7A000000 		.4byte	0x7a
 1307 023b 02       		.byte	0x2
 1308 023c 91       		.byte	0x91
 1309 023d 74       		.sleb128 -12
 1310 023e 0D       		.uleb128 0xd
 1311 023f 97020000 		.4byte	.LASF33
 1312 0243 01       		.byte	0x1
 1313 0244 9101     		.2byte	0x191
 1314 0246 6F000000 		.4byte	0x6f
 1315 024a 02       		.byte	0x2
 1316 024b 91       		.byte	0x91
 1317 024c 77       		.sleb128 -9
 1318 024d 00       		.byte	0x0
 1319 024e 0A       		.uleb128 0xa
 1320 024f 01       		.byte	0x1
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\cclZUmmV.s 			page 32


 1321 0250 AE000000 		.4byte	.LASF34
 1322 0254 01       		.byte	0x1
 1323 0255 B801     		.2byte	0x1b8
 1324 0257 01       		.byte	0x1
 1325 0258 6F000000 		.4byte	0x6f
 1326 025c 00000000 		.4byte	.LFB10
 1327 0260 1C000000 		.4byte	.LFE10
 1328 0264 F6010000 		.4byte	.LLST10
 1329 0268 00       		.byte	0x0
 1330              		.section	.debug_abbrev
 1331 0000 01       		.uleb128 0x1
 1332 0001 11       		.uleb128 0x11
 1333 0002 01       		.byte	0x1
 1334 0003 25       		.uleb128 0x25
 1335 0004 0E       		.uleb128 0xe
 1336 0005 13       		.uleb128 0x13
 1337 0006 0B       		.uleb128 0xb
 1338 0007 03       		.uleb128 0x3
 1339 0008 0E       		.uleb128 0xe
 1340 0009 1B       		.uleb128 0x1b
 1341 000a 0E       		.uleb128 0xe
 1342 000b 11       		.uleb128 0x11
 1343 000c 01       		.uleb128 0x1
 1344 000d 52       		.uleb128 0x52
 1345 000e 01       		.uleb128 0x1
 1346 000f 55       		.uleb128 0x55
 1347 0010 06       		.uleb128 0x6
 1348 0011 10       		.uleb128 0x10
 1349 0012 06       		.uleb128 0x6
 1350 0013 00       		.byte	0x0
 1351 0014 00       		.byte	0x0
 1352 0015 02       		.uleb128 0x2
 1353 0016 24       		.uleb128 0x24
 1354 0017 00       		.byte	0x0
 1355 0018 0B       		.uleb128 0xb
 1356 0019 0B       		.uleb128 0xb
 1357 001a 3E       		.uleb128 0x3e
 1358 001b 0B       		.uleb128 0xb
 1359 001c 03       		.uleb128 0x3
 1360 001d 0E       		.uleb128 0xe
 1361 001e 00       		.byte	0x0
 1362 001f 00       		.byte	0x0
 1363 0020 03       		.uleb128 0x3
 1364 0021 24       		.uleb128 0x24
 1365 0022 00       		.byte	0x0
 1366 0023 0B       		.uleb128 0xb
 1367 0024 0B       		.uleb128 0xb
 1368 0025 3E       		.uleb128 0x3e
 1369 0026 0B       		.uleb128 0xb
 1370 0027 03       		.uleb128 0x3
 1371 0028 08       		.uleb128 0x8
 1372 0029 00       		.byte	0x0
 1373 002a 00       		.byte	0x0
 1374 002b 04       		.uleb128 0x4
 1375 002c 16       		.uleb128 0x16
 1376 002d 00       		.byte	0x0
 1377 002e 03       		.uleb128 0x3
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\cclZUmmV.s 			page 33


 1378 002f 0E       		.uleb128 0xe
 1379 0030 3A       		.uleb128 0x3a
 1380 0031 0B       		.uleb128 0xb
 1381 0032 3B       		.uleb128 0x3b
 1382 0033 0B       		.uleb128 0xb
 1383 0034 49       		.uleb128 0x49
 1384 0035 13       		.uleb128 0x13
 1385 0036 00       		.byte	0x0
 1386 0037 00       		.byte	0x0
 1387 0038 05       		.uleb128 0x5
 1388 0039 2E       		.uleb128 0x2e
 1389 003a 00       		.byte	0x0
 1390 003b 3F       		.uleb128 0x3f
 1391 003c 0C       		.uleb128 0xc
 1392 003d 03       		.uleb128 0x3
 1393 003e 0E       		.uleb128 0xe
 1394 003f 3A       		.uleb128 0x3a
 1395 0040 0B       		.uleb128 0xb
 1396 0041 3B       		.uleb128 0x3b
 1397 0042 0B       		.uleb128 0xb
 1398 0043 27       		.uleb128 0x27
 1399 0044 0C       		.uleb128 0xc
 1400 0045 11       		.uleb128 0x11
 1401 0046 01       		.uleb128 0x1
 1402 0047 12       		.uleb128 0x12
 1403 0048 01       		.uleb128 0x1
 1404 0049 40       		.uleb128 0x40
 1405 004a 06       		.uleb128 0x6
 1406 004b 00       		.byte	0x0
 1407 004c 00       		.byte	0x0
 1408 004d 06       		.uleb128 0x6
 1409 004e 2E       		.uleb128 0x2e
 1410 004f 01       		.byte	0x1
 1411 0050 3F       		.uleb128 0x3f
 1412 0051 0C       		.uleb128 0xc
 1413 0052 03       		.uleb128 0x3
 1414 0053 0E       		.uleb128 0xe
 1415 0054 3A       		.uleb128 0x3a
 1416 0055 0B       		.uleb128 0xb
 1417 0056 3B       		.uleb128 0x3b
 1418 0057 0B       		.uleb128 0xb
 1419 0058 27       		.uleb128 0x27
 1420 0059 0C       		.uleb128 0xc
 1421 005a 11       		.uleb128 0x11
 1422 005b 01       		.uleb128 0x1
 1423 005c 12       		.uleb128 0x12
 1424 005d 01       		.uleb128 0x1
 1425 005e 40       		.uleb128 0x40
 1426 005f 06       		.uleb128 0x6
 1427 0060 01       		.uleb128 0x1
 1428 0061 13       		.uleb128 0x13
 1429 0062 00       		.byte	0x0
 1430 0063 00       		.byte	0x0
 1431 0064 07       		.uleb128 0x7
 1432 0065 0B       		.uleb128 0xb
 1433 0066 01       		.byte	0x1
 1434 0067 11       		.uleb128 0x11
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\cclZUmmV.s 			page 34


 1435 0068 01       		.uleb128 0x1
 1436 0069 12       		.uleb128 0x12
 1437 006a 01       		.uleb128 0x1
 1438 006b 00       		.byte	0x0
 1439 006c 00       		.byte	0x0
 1440 006d 08       		.uleb128 0x8
 1441 006e 34       		.uleb128 0x34
 1442 006f 00       		.byte	0x0
 1443 0070 03       		.uleb128 0x3
 1444 0071 0E       		.uleb128 0xe
 1445 0072 3A       		.uleb128 0x3a
 1446 0073 0B       		.uleb128 0xb
 1447 0074 3B       		.uleb128 0x3b
 1448 0075 0B       		.uleb128 0xb
 1449 0076 49       		.uleb128 0x49
 1450 0077 13       		.uleb128 0x13
 1451 0078 02       		.uleb128 0x2
 1452 0079 0A       		.uleb128 0xa
 1453 007a 00       		.byte	0x0
 1454 007b 00       		.byte	0x0
 1455 007c 09       		.uleb128 0x9
 1456 007d 05       		.uleb128 0x5
 1457 007e 00       		.byte	0x0
 1458 007f 03       		.uleb128 0x3
 1459 0080 0E       		.uleb128 0xe
 1460 0081 3A       		.uleb128 0x3a
 1461 0082 0B       		.uleb128 0xb
 1462 0083 3B       		.uleb128 0x3b
 1463 0084 0B       		.uleb128 0xb
 1464 0085 49       		.uleb128 0x49
 1465 0086 13       		.uleb128 0x13
 1466 0087 02       		.uleb128 0x2
 1467 0088 0A       		.uleb128 0xa
 1468 0089 00       		.byte	0x0
 1469 008a 00       		.byte	0x0
 1470 008b 0A       		.uleb128 0xa
 1471 008c 2E       		.uleb128 0x2e
 1472 008d 00       		.byte	0x0
 1473 008e 3F       		.uleb128 0x3f
 1474 008f 0C       		.uleb128 0xc
 1475 0090 03       		.uleb128 0x3
 1476 0091 0E       		.uleb128 0xe
 1477 0092 3A       		.uleb128 0x3a
 1478 0093 0B       		.uleb128 0xb
 1479 0094 3B       		.uleb128 0x3b
 1480 0095 05       		.uleb128 0x5
 1481 0096 27       		.uleb128 0x27
 1482 0097 0C       		.uleb128 0xc
 1483 0098 49       		.uleb128 0x49
 1484 0099 13       		.uleb128 0x13
 1485 009a 11       		.uleb128 0x11
 1486 009b 01       		.uleb128 0x1
 1487 009c 12       		.uleb128 0x12
 1488 009d 01       		.uleb128 0x1
 1489 009e 40       		.uleb128 0x40
 1490 009f 06       		.uleb128 0x6
 1491 00a0 00       		.byte	0x0
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\cclZUmmV.s 			page 35


 1492 00a1 00       		.byte	0x0
 1493 00a2 0B       		.uleb128 0xb
 1494 00a3 2E       		.uleb128 0x2e
 1495 00a4 01       		.byte	0x1
 1496 00a5 3F       		.uleb128 0x3f
 1497 00a6 0C       		.uleb128 0xc
 1498 00a7 03       		.uleb128 0x3
 1499 00a8 0E       		.uleb128 0xe
 1500 00a9 3A       		.uleb128 0x3a
 1501 00aa 0B       		.uleb128 0xb
 1502 00ab 3B       		.uleb128 0x3b
 1503 00ac 05       		.uleb128 0x5
 1504 00ad 27       		.uleb128 0x27
 1505 00ae 0C       		.uleb128 0xc
 1506 00af 11       		.uleb128 0x11
 1507 00b0 01       		.uleb128 0x1
 1508 00b1 12       		.uleb128 0x12
 1509 00b2 01       		.uleb128 0x1
 1510 00b3 40       		.uleb128 0x40
 1511 00b4 06       		.uleb128 0x6
 1512 00b5 01       		.uleb128 0x1
 1513 00b6 13       		.uleb128 0x13
 1514 00b7 00       		.byte	0x0
 1515 00b8 00       		.byte	0x0
 1516 00b9 0C       		.uleb128 0xc
 1517 00ba 05       		.uleb128 0x5
 1518 00bb 00       		.byte	0x0
 1519 00bc 03       		.uleb128 0x3
 1520 00bd 0E       		.uleb128 0xe
 1521 00be 3A       		.uleb128 0x3a
 1522 00bf 0B       		.uleb128 0xb
 1523 00c0 3B       		.uleb128 0x3b
 1524 00c1 05       		.uleb128 0x5
 1525 00c2 49       		.uleb128 0x49
 1526 00c3 13       		.uleb128 0x13
 1527 00c4 02       		.uleb128 0x2
 1528 00c5 0A       		.uleb128 0xa
 1529 00c6 00       		.byte	0x0
 1530 00c7 00       		.byte	0x0
 1531 00c8 0D       		.uleb128 0xd
 1532 00c9 34       		.uleb128 0x34
 1533 00ca 00       		.byte	0x0
 1534 00cb 03       		.uleb128 0x3
 1535 00cc 0E       		.uleb128 0xe
 1536 00cd 3A       		.uleb128 0x3a
 1537 00ce 0B       		.uleb128 0xb
 1538 00cf 3B       		.uleb128 0x3b
 1539 00d0 05       		.uleb128 0x5
 1540 00d1 49       		.uleb128 0x49
 1541 00d2 13       		.uleb128 0x13
 1542 00d3 02       		.uleb128 0x2
 1543 00d4 0A       		.uleb128 0xa
 1544 00d5 00       		.byte	0x0
 1545 00d6 00       		.byte	0x0
 1546 00d7 00       		.byte	0x0
 1547              		.section	.debug_pubnames,"",%progbits
 1548 0000 7D010000 		.4byte	0x17d
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\cclZUmmV.s 			page 36


 1549 0004 0200     		.2byte	0x2
 1550 0006 00000000 		.4byte	.Ldebug_info0
 1551 000a 69020000 		.4byte	0x269
 1552 000e 9A000000 		.4byte	0x9a
 1553 0012 4144435F 		.ascii	"ADC_Ext_CP_Clk_Start\000"
 1553      4578745F 
 1553      43505F43 
 1553      6C6B5F53 
 1553      74617274 
 1554 0027 AF000000 		.4byte	0xaf
 1555 002b 4144435F 		.ascii	"ADC_Ext_CP_Clk_Stop\000"
 1555      4578745F 
 1555      43505F43 
 1555      6C6B5F53 
 1555      746F7000 
 1556 003f C4000000 		.4byte	0xc4
 1557 0043 4144435F 		.ascii	"ADC_Ext_CP_Clk_StopBlock\000"
 1557      4578745F 
 1557      43505F43 
 1557      6C6B5F53 
 1557      746F7042 
 1558 005c F6000000 		.4byte	0xf6
 1559 0060 4144435F 		.ascii	"ADC_Ext_CP_Clk_StandbyPower\000"
 1559      4578745F 
 1559      43505F43 
 1559      6C6B5F53 
 1559      74616E64 
 1560 007c 1E010000 		.4byte	0x11e
 1561 0080 4144435F 		.ascii	"ADC_Ext_CP_Clk_SetDividerRegister\000"
 1561      4578745F 
 1561      43505F43 
 1561      6C6B5F53 
 1561      65744469 
 1562 00a2 7E010000 		.4byte	0x17e
 1563 00a6 4144435F 		.ascii	"ADC_Ext_CP_Clk_GetDividerRegister\000"
 1563      4578745F 
 1563      43505F43 
 1563      6C6B5F47 
 1563      65744469 
 1564 00c8 98010000 		.4byte	0x198
 1565 00cc 4144435F 		.ascii	"ADC_Ext_CP_Clk_SetModeRegister\000"
 1565      4578745F 
 1565      43505F43 
 1565      6C6B5F53 
 1565      65744D6F 
 1566 00eb C2010000 		.4byte	0x1c2
 1567 00ef 4144435F 		.ascii	"ADC_Ext_CP_Clk_ClearModeRegister\000"
 1567      4578745F 
 1567      43505F43 
 1567      6C6B5F43 
 1567      6C656172 
 1568 0110 EC010000 		.4byte	0x1ec
 1569 0114 4144435F 		.ascii	"ADC_Ext_CP_Clk_GetModeRegister\000"
 1569      4578745F 
 1569      43505F43 
 1569      6C6B5F47 
 1569      65744D6F 
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\cclZUmmV.s 			page 37


 1570 0133 06020000 		.4byte	0x206
 1571 0137 4144435F 		.ascii	"ADC_Ext_CP_Clk_SetSourceRegister\000"
 1571      4578745F 
 1571      43505F43 
 1571      6C6B5F53 
 1571      6574536F 
 1572 0158 4E020000 		.4byte	0x24e
 1573 015c 4144435F 		.ascii	"ADC_Ext_CP_Clk_GetSourceRegister\000"
 1573      4578745F 
 1573      43505F43 
 1573      6C6B5F47 
 1573      6574536F 
 1574 017d 00000000 		.4byte	0x0
 1575              		.section	.debug_aranges,"",%progbits
 1576 0000 6C000000 		.4byte	0x6c
 1577 0004 0200     		.2byte	0x2
 1578 0006 00000000 		.4byte	.Ldebug_info0
 1579 000a 04       		.byte	0x4
 1580 000b 00       		.byte	0x0
 1581 000c 0000     		.2byte	0x0
 1582 000e 0000     		.2byte	0x0
 1583 0010 00000000 		.4byte	.LFB0
 1584 0014 26000000 		.4byte	.LFE0-.LFB0
 1585 0018 00000000 		.4byte	.LFB1
 1586 001c 24000000 		.4byte	.LFE1-.LFB1
 1587 0020 00000000 		.4byte	.LFB2
 1588 0024 DA000000 		.4byte	.LFE2-.LFB2
 1589 0028 00000000 		.4byte	.LFB3
 1590 002c 52000000 		.4byte	.LFE3-.LFB3
 1591 0030 00000000 		.4byte	.LFB4
 1592 0034 D4010000 		.4byte	.LFE4-.LFB4
 1593 0038 00000000 		.4byte	.LFB5
 1594 003c 18000000 		.4byte	.LFE5-.LFB5
 1595 0040 00000000 		.4byte	.LFB6
 1596 0044 36000000 		.4byte	.LFE6-.LFB6
 1597 0048 00000000 		.4byte	.LFB7
 1598 004c 3E000000 		.4byte	.LFE7-.LFB7
 1599 0050 00000000 		.4byte	.LFB8
 1600 0054 1C000000 		.4byte	.LFE8-.LFB8
 1601 0058 00000000 		.4byte	.LFB9
 1602 005c E6000000 		.4byte	.LFE9-.LFB9
 1603 0060 00000000 		.4byte	.LFB10
 1604 0064 1C000000 		.4byte	.LFE10-.LFB10
 1605 0068 00000000 		.4byte	0x0
 1606 006c 00000000 		.4byte	0x0
 1607              		.section	.debug_ranges,"",%progbits
 1608              	.Ldebug_ranges0:
 1609 0000 00000000 		.4byte	.Ltext0
 1610 0004 00000000 		.4byte	.Letext0
 1611 0008 00000000 		.4byte	.LFB0
 1612 000c 26000000 		.4byte	.LFE0
 1613 0010 00000000 		.4byte	.LFB1
 1614 0014 24000000 		.4byte	.LFE1
 1615 0018 00000000 		.4byte	.LFB2
 1616 001c DA000000 		.4byte	.LFE2
 1617 0020 00000000 		.4byte	.LFB3
 1618 0024 52000000 		.4byte	.LFE3
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\cclZUmmV.s 			page 38


 1619 0028 00000000 		.4byte	.LFB4
 1620 002c D4010000 		.4byte	.LFE4
 1621 0030 00000000 		.4byte	.LFB5
 1622 0034 18000000 		.4byte	.LFE5
 1623 0038 00000000 		.4byte	.LFB6
 1624 003c 36000000 		.4byte	.LFE6
 1625 0040 00000000 		.4byte	.LFB7
 1626 0044 3E000000 		.4byte	.LFE7
 1627 0048 00000000 		.4byte	.LFB8
 1628 004c 1C000000 		.4byte	.LFE8
 1629 0050 00000000 		.4byte	.LFB9
 1630 0054 E6000000 		.4byte	.LFE9
 1631 0058 00000000 		.4byte	.LFB10
 1632 005c 1C000000 		.4byte	.LFE10
 1633 0060 00000000 		.4byte	0x0
 1634 0064 00000000 		.4byte	0x0
 1635              		.section	.debug_str,"MS",%progbits,1
 1636              	.LASF6:
 1637 0000 6C6F6E67 		.ascii	"long long int\000"
 1637      206C6F6E 
 1637      6720696E 
 1637      7400
 1638              	.LASF29:
 1639 000e 4144435F 		.ascii	"ADC_Ext_CP_Clk_GetModeRegister\000"
 1639      4578745F 
 1639      43505F43 
 1639      6C6B5F47 
 1639      65744D6F 
 1640              	.LASF30:
 1641 002d 4144435F 		.ascii	"ADC_Ext_CP_Clk_SetSourceRegister\000"
 1641      4578745F 
 1641      43505F43 
 1641      6C6B5F53 
 1641      6574536F 
 1642              	.LASF19:
 1643 004e 73746174 		.ascii	"state\000"
 1643      6500
 1644              	.LASF22:
 1645 0054 6F6C6444 		.ascii	"oldDivider\000"
 1645      69766964 
 1645      657200
 1646              	.LASF37:
 1647 005f 453A5C50 		.ascii	"E:\\PSoC Creator\\FathersDay2013\\marquee.cydsn\000"
 1647      536F4320 
 1647      43726561 
 1647      746F725C 
 1647      46617468 
 1648              	.LASF18:
 1649 008c 4144435F 		.ascii	"ADC_Ext_CP_Clk_SetDividerRegister\000"
 1649      4578745F 
 1649      43505F43 
 1649      6C6B5F53 
 1649      65744469 
 1650              	.LASF34:
 1651 00ae 4144435F 		.ascii	"ADC_Ext_CP_Clk_GetSourceRegister\000"
 1651      4578745F 
 1651      43505F43 
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\cclZUmmV.s 			page 39


 1651      6C6B5F47 
 1651      6574536F 
 1652              	.LASF12:
 1653 00cf 646F7562 		.ascii	"double\000"
 1653      6C6500
 1654              	.LASF25:
 1655 00d6 4144435F 		.ascii	"ADC_Ext_CP_Clk_SetModeRegister\000"
 1655      4578745F 
 1655      43505F43 
 1655      6C6B5F53 
 1655      65744D6F 
 1656              	.LASF11:
 1657 00f5 666C6F61 		.ascii	"float\000"
 1657      7400
 1658              	.LASF1:
 1659 00fb 756E7369 		.ascii	"unsigned char\000"
 1659      676E6564 
 1659      20636861 
 1659      7200
 1660              	.LASF23:
 1661 0109 656E6162 		.ascii	"enabled\000"
 1661      6C656400 
 1662              	.LASF5:
 1663 0111 6C6F6E67 		.ascii	"long unsigned int\000"
 1663      20756E73 
 1663      69676E65 
 1663      6420696E 
 1663      7400
 1664              	.LASF3:
 1665 0123 73686F72 		.ascii	"short unsigned int\000"
 1665      7420756E 
 1665      7369676E 
 1665      65642069 
 1665      6E7400
 1666              	.LASF16:
 1667 0136 4144435F 		.ascii	"ADC_Ext_CP_Clk_StopBlock\000"
 1667      4578745F 
 1667      43505F43 
 1667      6C6B5F53 
 1667      746F7042 
 1668              	.LASF20:
 1669 014f 636C6B44 		.ascii	"clkDivider\000"
 1669      69766964 
 1669      657200
 1670              	.LASF36:
 1671 015a 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\ADC_Ext_CP_Clk.c\000"
 1671      6E657261 
 1671      7465645F 
 1671      536F7572 
 1671      63655C50 
 1672              	.LASF21:
 1673 0184 72657374 		.ascii	"restart\000"
 1673      61727400 
 1674              	.LASF10:
 1675 018c 75696E74 		.ascii	"uint16\000"
 1675      313600
 1676              	.LASF26:
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\cclZUmmV.s 			page 40


 1677 0193 636C6B4D 		.ascii	"clkMode\000"
 1677      6F646500 
 1678              	.LASF8:
 1679 019b 756E7369 		.ascii	"unsigned int\000"
 1679      676E6564 
 1679      20696E74 
 1679      00
 1680              	.LASF24:
 1681 01a8 63757272 		.ascii	"currSrc\000"
 1681      53726300 
 1682              	.LASF17:
 1683 01b0 4144435F 		.ascii	"ADC_Ext_CP_Clk_StandbyPower\000"
 1683      4578745F 
 1683      43505F43 
 1683      6C6B5F53 
 1683      74616E64 
 1684              	.LASF7:
 1685 01cc 6C6F6E67 		.ascii	"long long unsigned int\000"
 1685      206C6F6E 
 1685      6720756E 
 1685      7369676E 
 1685      65642069 
 1686              	.LASF14:
 1687 01e3 4144435F 		.ascii	"ADC_Ext_CP_Clk_Start\000"
 1687      4578745F 
 1687      43505F43 
 1687      6C6B5F53 
 1687      74617274 
 1688              	.LASF35:
 1689 01f8 474E5520 		.ascii	"GNU C 4.4.1\000"
 1689      4320342E 
 1689      342E3100 
 1690              	.LASF27:
 1691 0204 4144435F 		.ascii	"ADC_Ext_CP_Clk_ClearModeRegister\000"
 1691      4578745F 
 1691      43505F43 
 1691      6C6B5F43 
 1691      6C656172 
 1692              	.LASF13:
 1693 0225 63686172 		.ascii	"char\000"
 1693      00
 1694              	.LASF32:
 1695 022a 63757272 		.ascii	"currDiv\000"
 1695      44697600 
 1696              	.LASF28:
 1697 0232 4144435F 		.ascii	"ADC_Ext_CP_Clk_GetDividerRegister\000"
 1697      4578745F 
 1697      43505F43 
 1697      6C6B5F47 
 1697      65744469 
 1698              	.LASF2:
 1699 0254 73686F72 		.ascii	"short int\000"
 1699      7420696E 
 1699      7400
 1700              	.LASF9:
 1701 025e 75696E74 		.ascii	"uint8\000"
 1701      3800
ARM GAS  C:\DOCUME~1\david\LOCALS~1\Temp\cclZUmmV.s 			page 41


 1702              	.LASF4:
 1703 0264 6C6F6E67 		.ascii	"long int\000"
 1703      20696E74 
 1703      00
 1704              	.LASF31:
 1705 026d 636C6B53 		.ascii	"clkSource\000"
 1705      6F757263 
 1705      6500
 1706              	.LASF0:
 1707 0277 7369676E 		.ascii	"signed char\000"
 1707      65642063 
 1707      68617200 
 1708              	.LASF15:
 1709 0283 4144435F 		.ascii	"ADC_Ext_CP_Clk_Stop\000"
 1709      4578745F 
 1709      43505F43 
 1709      6C6B5F53 
 1709      746F7000 
 1710              	.LASF33:
 1711 0297 6F6C6453 		.ascii	"oldSrc\000"
 1711      726300
 1712              		.ident	"GCC: (Sourcery G++ Lite 2010q1-188) 4.4.1"
